   0  $accept : program $end

   1  program : type_declarations

   2  type_declarations : type_declaration
   3                    | type_declarations type_declaration

   4  type_declaration : class_declaration
   5                   | interface_declaration
   6                   | implement_for_declaration
   7                   | statement

   8  class_declaration : CLASS ID class_body
   9                    | CLASS ID interfaces class_body

  10  class_body : '{' class_body_declarations '}'

  11  class_body_declarations : class_body_declaration
  12                          | class_body_declarations class_body_declaration

  13  class_body_declaration : class_member_declaration

  14  class_member_declaration : field_declaration
  15                           | method_declaration

  16  field_declaration : type variable_declarators ','
  17                    | error ','

  18  variable_declarators : variable_declarator
  19                       | variable_declarators ';' variable_declarator

  20  variable_declarator : variable_declarator_id
  21                      | variable_declarator_id '=' variable_initializer

  22  variable_declarator_id : ID

  23  variable_initializer : arithmetic_operation

  24  method_declaration : method_header method_body

  25  method_header : result_type method_declarator

  26  result_type : VOID

  27  method_declarator : ID '(' formal_parameter ')'
  28                    | ID '(' ')'

  29  method_body : block
  30              | ','

  31  formal_parameter : type variable_declarator_id

  32  real_parameter : arithmetic_operation

  33  interfaces : IMPLEMENT interface_type_list

  34  interface_type_list : type_name
  35                      | interface_type_list ';' type_name

  36  interface_declaration : INTERFACE ID interface_body

  37  interface_body : '{' interface_member_declaration '}'
  38                 | '{' '}' ','

  39  interface_member_declaration : interface_method_declaration
  40                               | interface_member_declaration interface_method_declaration

  41  interface_method_declaration : result_type method_declarator

  42  implement_for_declaration : IMPL FOR reference_type ':' implement_for_body
  43                            | IMPL FOR reference_type ':' error ','

  44  implement_for_body : '{' implement_for_body_declarations '}'

  45  implement_for_body_declarations : implement_for_body_declaration
  46                                  | implement_for_body_declarations implement_for_body_declaration

  47  implement_for_body_declaration : implement_for_method_declaration

  48  implement_for_method_declaration : method_header implement_for_method_body

  49  implement_for_method_body : method_body

  50  assignment : left_hand_side assignment_operator expression

  51  left_hand_side : ID

  52  expression : equality_expression

  53  equality_expression : relational_expression
  54                      | equality_expression EQUAL_OPERATOR relational_expression
  55                      | equality_expression NOT_EQUAL_OPERATOR relational_expression

  56  relational_expression : additive_expression
  57                        | relational_expression '<' additive_expression
  58                        | relational_expression '>' additive_expression
  59                        | relational_expression GREATER_THAN_OR_EQUAL_OPERATOR additive_expression
  60                        | relational_expression LESS_THAN_OR_EQUAL_OPERATOR additive_expression

  61  arithmetic_operation : additive_expression

  62  additive_expression : multiplicative_expression
  63                      | additive_expression '+' multiplicative_expression
  64                      | additive_expression '-' multiplicative_expression

  65  multiplicative_expression : unary_expression
  66                            | TOD '(' unary_expression ')'
  67                            | multiplicative_expression '*' unary_expression
  68                            | multiplicative_expression '/' unary_expression
  69                            | multiplicative_expression '%' unary_expression

  70  unary_expression : term
  71                   | ID

  72  term : factor
  73       | '(' expression ')'

  74  factor : CTE_DOUBLE
  75         | CTE_UINT
  76         | CTE_LONG
  77         | '-' CTE_DOUBLE
  78         | '-' CTE_LONG
  79         | '-' CTE_UINT

  80  assignment_operator : '='
  81                      | MINUS_ASSIGN

  82  method_invocation : ID '(' real_parameter ')' ','
  83                    | ID '(' ')' ','

  84  type : primitive_type
  85       | reference_type

  86  primitive_type : numeric_type

  87  reference_type : ID

  88  numeric_type : integral_type
  89               | floating_type

  90  integral_type : UINT
  91                | LONG

  92  floating_type : DOUBLE

  93  type_name : ID

  94  block : '{' block_statements RETURN ',' '}'
  95        | '{' block_statements '}'
  96        | '{' RETURN ',' '}'
  97        | '{' '}'

  98  executable_block : '{' executable_block_statements '}'
  99                   | '{' '}'

 100  block_statements : block_statement
 101                   | block_statements block_statement

 102  executable_block_statements : executable_statament
 103                              | executable_block_statements executable_statament

 104  block_statement : local_variable_declaration_statement
 105                  | statement

 106  executable_statament : if_then_statement
 107                       | if_then_else_statement
 108                       | for_in_range_statement
 109                       | print_statement
 110                       | expression_statement
 111                       | empty_statement

 112  local_variable_declaration_statement : local_variable_declaration ','

 113  local_variable_declaration : type variable_declarators

 114  statement : statement_without_trailing_substatement
 115            | if_then_statement
 116            | if_then_else_statement
 117            | for_in_range_statement
 118            | method_declaration
 119            | print_statement

 120  statement_without_trailing_substatement : block
 121                                          | empty_statement
 122                                          | expression_statement

 123  expression_statement : statement_expression

 124  statement_expression : assignment
 125                       | method_invocation

 126  empty_statement : ','

 127  if_then_statement : IF '(' expression ')' executable_block END_IF ','
 128                    | IF '(' expression ')' executable_statament END_IF ','
 129                    | IF '(' expression ')' executable_statament
 130                    | IF '(' expression ')'
 131                    | IF '(' error ','

 132  if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block END_IF ','
 133                         | IF '(' expression ')' executable_block ELSE executable_statament END_IF ','
 134                         | IF '(' expression ')' executable_statament ELSE executable_statament END_IF ','
 135                         | IF '(' expression ')' executable_statament ELSE executable_block END_IF ','
 136                         | IF '(' expression ')' executable_statament ELSE executable_block ','

 137  for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_block ','
 138                         | FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament ','

 139  for_variable : ID

 140  for_init : factor

 141  for_update : factor

 142  for_end : factor

 143  print_statement : PRINT CADENA ','
 144                  | PRINT

state 0
	$accept : . program $end  (0)

	CLASS  shift 1
	INTERFACE  shift 2
	IF  shift 3
	FOR  shift 4
	IMPL  shift 5
	PRINT  shift 6
	VOID  shift 7
	ID  shift 8
	'{'  shift 9
	','  shift 10
	.  error

	program  goto 11
	type_declarations  goto 12
	type_declaration  goto 13
	class_declaration  goto 14
	interface_declaration  goto 15
	implement_for_declaration  goto 16
	statement  goto 17
	method_declaration  goto 18
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 1
	class_declaration : CLASS . ID class_body  (8)
	class_declaration : CLASS . ID interfaces class_body  (9)

	ID  shift 33
	.  error


state 2
	interface_declaration : INTERFACE . ID interface_body  (36)

	ID  shift 34
	.  error


state 3
	if_then_statement : IF . '(' expression ')' executable_block END_IF ','  (127)
	if_then_statement : IF . '(' expression ')' executable_statament END_IF ','  (128)
	if_then_statement : IF . '(' expression ')' executable_statament  (129)
	if_then_statement : IF . '(' expression ')'  (130)
	if_then_statement : IF . '(' error ','  (131)
	if_then_else_statement : IF . '(' expression ')' executable_block ELSE executable_block END_IF ','  (132)
	if_then_else_statement : IF . '(' expression ')' executable_block ELSE executable_statament END_IF ','  (133)
	if_then_else_statement : IF . '(' expression ')' executable_statament ELSE executable_statament END_IF ','  (134)
	if_then_else_statement : IF . '(' expression ')' executable_statament ELSE executable_block END_IF ','  (135)
	if_then_else_statement : IF . '(' expression ')' executable_statament ELSE executable_block ','  (136)

	'('  shift 35
	.  error


state 4
	for_in_range_statement : FOR . for_variable IN RANGE '(' for_init for_end for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR . for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament ','  (138)

	ID  shift 36
	.  error

	for_variable  goto 37


state 5
	implement_for_declaration : IMPL . FOR reference_type ':' implement_for_body  (42)
	implement_for_declaration : IMPL . FOR reference_type ':' error ','  (43)

	FOR  shift 38
	.  error


state 6
	print_statement : PRINT . CADENA ','  (143)
	print_statement : PRINT .  (144)

	CADENA  shift 39
	$end  reduce 144
	CLASS  reduce 144
	INTERFACE  reduce 144
	RETURN  reduce 144
	IF  reduce 144
	ELSE  reduce 144
	END_IF  reduce 144
	FOR  reduce 144
	IMPL  reduce 144
	PRINT  reduce 144
	VOID  reduce 144
	LONG  reduce 144
	UINT  reduce 144
	DOUBLE  reduce 144
	ID  reduce 144
	'{'  reduce 144
	'}'  reduce 144
	','  reduce 144


state 7
	result_type : VOID .  (26)

	.  reduce 26


state 8
	left_hand_side : ID .  (51)
	method_invocation : ID . '(' real_parameter ')' ','  (82)
	method_invocation : ID . '(' ')' ','  (83)

	'('  shift 40
	MINUS_ASSIGN  reduce 51
	'='  reduce 51


state 9
	block : '{' . block_statements RETURN ',' '}'  (94)
	block : '{' . block_statements '}'  (95)
	block : '{' . RETURN ',' '}'  (96)
	block : '{' . '}'  (97)

	RETURN  shift 41
	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 45
	'{'  shift 9
	'}'  shift 46
	','  shift 10
	.  error

	statement  goto 47
	method_declaration  goto 18
	type  goto 48
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	reference_type  goto 49
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53
	block_statements  goto 54
	block_statement  goto 55
	local_variable_declaration_statement  goto 56
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	local_variable_declaration  goto 57
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 10
	empty_statement : ',' .  (126)

	.  reduce 126


state 11
	$accept : program . $end  (0)

	$end  accept


state 12
	program : type_declarations .  (1)
	type_declarations : type_declarations . type_declaration  (3)

	CLASS  shift 1
	INTERFACE  shift 2
	IF  shift 3
	FOR  shift 4
	IMPL  shift 5
	PRINT  shift 6
	VOID  shift 7
	ID  shift 8
	'{'  shift 9
	','  shift 10
	$end  reduce 1

	type_declaration  goto 58
	class_declaration  goto 14
	interface_declaration  goto 15
	implement_for_declaration  goto 16
	statement  goto 17
	method_declaration  goto 18
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 13
	type_declarations : type_declaration .  (2)

	.  reduce 2


state 14
	type_declaration : class_declaration .  (4)

	.  reduce 4


state 15
	type_declaration : interface_declaration .  (5)

	.  reduce 5


state 16
	type_declaration : implement_for_declaration .  (6)

	.  reduce 6


state 17
	type_declaration : statement .  (7)

	.  reduce 7


state 18
	statement : method_declaration .  (118)

	.  reduce 118


state 19
	method_declaration : method_header . method_body  (24)

	'{'  shift 9
	','  shift 59
	.  error

	method_body  goto 60
	block  goto 61


state 20
	method_header : result_type . method_declarator  (25)

	ID  shift 62
	.  error

	method_declarator  goto 63


state 21
	statement_without_trailing_substatement : block .  (120)

	.  reduce 120


state 22
	statement_expression : assignment .  (124)

	.  reduce 124


state 23
	assignment : left_hand_side . assignment_operator expression  (50)

	MINUS_ASSIGN  shift 64
	'='  shift 65
	.  error

	assignment_operator  goto 66


state 24
	statement_expression : method_invocation .  (125)

	.  reduce 125


state 25
	statement : if_then_statement .  (115)

	.  reduce 115


state 26
	statement : if_then_else_statement .  (116)

	.  reduce 116


state 27
	statement : for_in_range_statement .  (117)

	.  reduce 117


state 28
	statement : print_statement .  (119)

	.  reduce 119


state 29
	statement_without_trailing_substatement : expression_statement .  (122)

	.  reduce 122


state 30
	statement_without_trailing_substatement : empty_statement .  (121)

	.  reduce 121


state 31
	statement : statement_without_trailing_substatement .  (114)

	.  reduce 114


state 32
	expression_statement : statement_expression .  (123)

	.  reduce 123


state 33
	class_declaration : CLASS ID . class_body  (8)
	class_declaration : CLASS ID . interfaces class_body  (9)

	IMPLEMENT  shift 67
	'{'  shift 68
	.  error

	class_body  goto 69
	interfaces  goto 70


state 34
	interface_declaration : INTERFACE ID . interface_body  (36)

	'{'  shift 71
	.  error

	interface_body  goto 72


state 35
	if_then_statement : IF '(' . expression ')' executable_block END_IF ','  (127)
	if_then_statement : IF '(' . expression ')' executable_statament END_IF ','  (128)
	if_then_statement : IF '(' . expression ')' executable_statament  (129)
	if_then_statement : IF '(' . expression ')'  (130)
	if_then_statement : IF '(' . error ','  (131)
	if_then_else_statement : IF '(' . expression ')' executable_block ELSE executable_block END_IF ','  (132)
	if_then_else_statement : IF '(' . expression ')' executable_block ELSE executable_statament END_IF ','  (133)
	if_then_else_statement : IF '(' . expression ')' executable_statament ELSE executable_statament END_IF ','  (134)
	if_then_else_statement : IF '(' . expression ')' executable_statament ELSE executable_block END_IF ','  (135)
	if_then_else_statement : IF '(' . expression ')' executable_statament ELSE executable_block ','  (136)

	error  shift 73
	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	expression  goto 81
	equality_expression  goto 82
	relational_expression  goto 83
	additive_expression  goto 84
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 36
	for_variable : ID .  (139)

	.  reduce 139


state 37
	for_in_range_statement : FOR for_variable . IN RANGE '(' for_init for_end for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable . IN RANGE '(' for_init for_end for_update ')' executable_statament ','  (138)

	IN  shift 89
	.  error


state 38
	implement_for_declaration : IMPL FOR . reference_type ':' implement_for_body  (42)
	implement_for_declaration : IMPL FOR . reference_type ':' error ','  (43)

	ID  shift 90
	.  error

	reference_type  goto 91


state 39
	print_statement : PRINT CADENA . ','  (143)

	','  shift 92
	.  error


state 40
	method_invocation : ID '(' . real_parameter ')' ','  (82)
	method_invocation : ID '(' . ')' ','  (83)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	')'  shift 93
	.  error

	arithmetic_operation  goto 94
	real_parameter  goto 95
	additive_expression  goto 96
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 41
	block : '{' RETURN . ',' '}'  (96)

	','  shift 97
	.  error


state 42
	integral_type : LONG .  (91)

	.  reduce 91


state 43
	integral_type : UINT .  (90)

	.  reduce 90


state 44
	floating_type : DOUBLE .  (92)

	.  reduce 92


state 45
	left_hand_side : ID .  (51)
	method_invocation : ID . '(' real_parameter ')' ','  (82)
	method_invocation : ID . '(' ')' ','  (83)
	reference_type : ID .  (87)

	'('  shift 40
	MINUS_ASSIGN  reduce 51
	ID  reduce 87
	'='  reduce 51


state 46
	block : '{' '}' .  (97)

	.  reduce 97


state 47
	block_statement : statement .  (105)

	.  reduce 105


state 48
	local_variable_declaration : type . variable_declarators  (113)

	ID  shift 98
	.  error

	variable_declarators  goto 99
	variable_declarator  goto 100
	variable_declarator_id  goto 101


state 49
	type : reference_type .  (85)

	.  reduce 85


state 50
	type : primitive_type .  (84)

	.  reduce 84


state 51
	primitive_type : numeric_type .  (86)

	.  reduce 86


state 52
	numeric_type : integral_type .  (88)

	.  reduce 88


state 53
	numeric_type : floating_type .  (89)

	.  reduce 89


state 54
	block : '{' block_statements . RETURN ',' '}'  (94)
	block : '{' block_statements . '}'  (95)
	block_statements : block_statements . block_statement  (101)

	RETURN  shift 102
	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 45
	'{'  shift 9
	'}'  shift 103
	','  shift 10
	.  error

	statement  goto 47
	method_declaration  goto 18
	type  goto 48
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	reference_type  goto 49
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53
	block_statement  goto 104
	local_variable_declaration_statement  goto 56
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	local_variable_declaration  goto 57
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 55
	block_statements : block_statement .  (100)

	.  reduce 100


state 56
	block_statement : local_variable_declaration_statement .  (104)

	.  reduce 104


state 57
	local_variable_declaration_statement : local_variable_declaration . ','  (112)

	','  shift 105
	.  error


state 58
	type_declarations : type_declarations type_declaration .  (3)

	.  reduce 3


state 59
	method_body : ',' .  (30)

	.  reduce 30


state 60
	method_declaration : method_header method_body .  (24)

	.  reduce 24


state 61
	method_body : block .  (29)

	.  reduce 29


state 62
	method_declarator : ID . '(' formal_parameter ')'  (27)
	method_declarator : ID . '(' ')'  (28)

	'('  shift 106
	.  error


state 63
	method_header : result_type method_declarator .  (25)

	.  reduce 25


state 64
	assignment_operator : MINUS_ASSIGN .  (81)

	.  reduce 81


state 65
	assignment_operator : '=' .  (80)

	.  reduce 80


state 66
	assignment : left_hand_side assignment_operator . expression  (50)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	expression  goto 107
	equality_expression  goto 82
	relational_expression  goto 83
	additive_expression  goto 84
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 67
	interfaces : IMPLEMENT . interface_type_list  (33)

	ID  shift 108
	.  error

	interface_type_list  goto 109
	type_name  goto 110


state 68
	class_body : '{' . class_body_declarations '}'  (10)

	error  shift 111
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 90
	.  error

	class_body_declarations  goto 112
	class_body_declaration  goto 113
	class_member_declaration  goto 114
	field_declaration  goto 115
	method_declaration  goto 116
	type  goto 117
	method_header  goto 19
	result_type  goto 20
	reference_type  goto 49
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53


state 69
	class_declaration : CLASS ID class_body .  (8)

	.  reduce 8


state 70
	class_declaration : CLASS ID interfaces . class_body  (9)

	'{'  shift 68
	.  error

	class_body  goto 118


state 71
	interface_body : '{' . interface_member_declaration '}'  (37)
	interface_body : '{' . '}' ','  (38)

	VOID  shift 7
	'}'  shift 119
	.  error

	result_type  goto 120
	interface_member_declaration  goto 121
	interface_method_declaration  goto 122


state 72
	interface_declaration : INTERFACE ID interface_body .  (36)

	.  reduce 36


state 73
	if_then_statement : IF '(' error . ','  (131)

	','  shift 123
	.  error


state 74
	multiplicative_expression : TOD . '(' unary_expression ')'  (66)

	'('  shift 124
	.  error


state 75
	unary_expression : ID .  (71)

	.  reduce 71


state 76
	factor : CTE_DOUBLE .  (74)

	.  reduce 74


state 77
	factor : CTE_UINT .  (75)

	.  reduce 75


state 78
	factor : CTE_LONG .  (76)

	.  reduce 76


state 79
	factor : '-' . CTE_DOUBLE  (77)
	factor : '-' . CTE_LONG  (78)
	factor : '-' . CTE_UINT  (79)

	CTE_DOUBLE  shift 125
	CTE_UINT  shift 126
	CTE_LONG  shift 127
	.  error


state 80
	term : '(' . expression ')'  (73)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	expression  goto 128
	equality_expression  goto 82
	relational_expression  goto 83
	additive_expression  goto 84
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 81
	if_then_statement : IF '(' expression . ')' executable_block END_IF ','  (127)
	if_then_statement : IF '(' expression . ')' executable_statament END_IF ','  (128)
	if_then_statement : IF '(' expression . ')' executable_statament  (129)
	if_then_statement : IF '(' expression . ')'  (130)
	if_then_else_statement : IF '(' expression . ')' executable_block ELSE executable_block END_IF ','  (132)
	if_then_else_statement : IF '(' expression . ')' executable_block ELSE executable_statament END_IF ','  (133)
	if_then_else_statement : IF '(' expression . ')' executable_statament ELSE executable_statament END_IF ','  (134)
	if_then_else_statement : IF '(' expression . ')' executable_statament ELSE executable_block END_IF ','  (135)
	if_then_else_statement : IF '(' expression . ')' executable_statament ELSE executable_block ','  (136)

	')'  shift 129
	.  error


state 82
	expression : equality_expression .  (52)
	equality_expression : equality_expression . EQUAL_OPERATOR relational_expression  (54)
	equality_expression : equality_expression . NOT_EQUAL_OPERATOR relational_expression  (55)

	EQUAL_OPERATOR  shift 130
	NOT_EQUAL_OPERATOR  shift 131
	$end  reduce 52
	CLASS  reduce 52
	INTERFACE  reduce 52
	RETURN  reduce 52
	IF  reduce 52
	ELSE  reduce 52
	END_IF  reduce 52
	FOR  reduce 52
	IMPL  reduce 52
	PRINT  reduce 52
	VOID  reduce 52
	LONG  reduce 52
	UINT  reduce 52
	DOUBLE  reduce 52
	ID  reduce 52
	'{'  reduce 52
	'}'  reduce 52
	','  reduce 52
	')'  reduce 52


state 83
	equality_expression : relational_expression .  (53)
	relational_expression : relational_expression . '<' additive_expression  (57)
	relational_expression : relational_expression . '>' additive_expression  (58)
	relational_expression : relational_expression . GREATER_THAN_OR_EQUAL_OPERATOR additive_expression  (59)
	relational_expression : relational_expression . LESS_THAN_OR_EQUAL_OPERATOR additive_expression  (60)

	GREATER_THAN_OR_EQUAL_OPERATOR  shift 132
	LESS_THAN_OR_EQUAL_OPERATOR  shift 133
	'<'  shift 134
	'>'  shift 135
	$end  reduce 53
	CLASS  reduce 53
	INTERFACE  reduce 53
	RETURN  reduce 53
	IF  reduce 53
	ELSE  reduce 53
	END_IF  reduce 53
	FOR  reduce 53
	IMPL  reduce 53
	PRINT  reduce 53
	EQUAL_OPERATOR  reduce 53
	NOT_EQUAL_OPERATOR  reduce 53
	VOID  reduce 53
	LONG  reduce 53
	UINT  reduce 53
	DOUBLE  reduce 53
	ID  reduce 53
	'{'  reduce 53
	'}'  reduce 53
	','  reduce 53
	')'  reduce 53


state 84
	relational_expression : additive_expression .  (56)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 136
	'-'  shift 137
	$end  reduce 56
	CLASS  reduce 56
	INTERFACE  reduce 56
	RETURN  reduce 56
	IF  reduce 56
	ELSE  reduce 56
	END_IF  reduce 56
	FOR  reduce 56
	IMPL  reduce 56
	PRINT  reduce 56
	EQUAL_OPERATOR  reduce 56
	NOT_EQUAL_OPERATOR  reduce 56
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 56
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 56
	VOID  reduce 56
	LONG  reduce 56
	UINT  reduce 56
	DOUBLE  reduce 56
	ID  reduce 56
	'{'  reduce 56
	'}'  reduce 56
	','  reduce 56
	')'  reduce 56
	'<'  reduce 56
	'>'  reduce 56


state 85
	additive_expression : multiplicative_expression .  (62)
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (67)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (68)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (69)

	'*'  shift 138
	'/'  shift 139
	'%'  shift 140
	$end  reduce 62
	CLASS  reduce 62
	INTERFACE  reduce 62
	RETURN  reduce 62
	IF  reduce 62
	ELSE  reduce 62
	END_IF  reduce 62
	FOR  reduce 62
	IMPL  reduce 62
	PRINT  reduce 62
	EQUAL_OPERATOR  reduce 62
	NOT_EQUAL_OPERATOR  reduce 62
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 62
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 62
	VOID  reduce 62
	LONG  reduce 62
	UINT  reduce 62
	DOUBLE  reduce 62
	ID  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'{'  reduce 62
	'}'  reduce 62
	','  reduce 62
	';'  reduce 62
	')'  reduce 62
	'<'  reduce 62
	'>'  reduce 62


state 86
	multiplicative_expression : unary_expression .  (65)

	.  reduce 65


state 87
	unary_expression : term .  (70)

	.  reduce 70


state 88
	term : factor .  (72)

	.  reduce 72


state 89
	for_in_range_statement : FOR for_variable IN . RANGE '(' for_init for_end for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN . RANGE '(' for_init for_end for_update ')' executable_statament ','  (138)

	RANGE  shift 141
	.  error


state 90
	reference_type : ID .  (87)

	.  reduce 87


state 91
	implement_for_declaration : IMPL FOR reference_type . ':' implement_for_body  (42)
	implement_for_declaration : IMPL FOR reference_type . ':' error ','  (43)

	':'  shift 142
	.  error


state 92
	print_statement : PRINT CADENA ',' .  (143)

	.  reduce 143


state 93
	method_invocation : ID '(' ')' . ','  (83)

	','  shift 143
	.  error


state 94
	real_parameter : arithmetic_operation .  (32)

	.  reduce 32


state 95
	method_invocation : ID '(' real_parameter . ')' ','  (82)

	')'  shift 144
	.  error


state 96
	arithmetic_operation : additive_expression .  (61)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 136
	'-'  shift 137
	','  reduce 61
	';'  reduce 61
	')'  reduce 61


state 97
	block : '{' RETURN ',' . '}'  (96)

	'}'  shift 145
	.  error


state 98
	variable_declarator_id : ID .  (22)

	.  reduce 22


state 99
	variable_declarators : variable_declarators . ';' variable_declarator  (19)
	local_variable_declaration : type variable_declarators .  (113)

	';'  shift 146
	','  reduce 113


state 100
	variable_declarators : variable_declarator .  (18)

	.  reduce 18


state 101
	variable_declarator : variable_declarator_id .  (20)
	variable_declarator : variable_declarator_id . '=' variable_initializer  (21)

	'='  shift 147
	','  reduce 20
	';'  reduce 20


state 102
	block : '{' block_statements RETURN . ',' '}'  (94)

	','  shift 148
	.  error


state 103
	block : '{' block_statements '}' .  (95)

	.  reduce 95


state 104
	block_statements : block_statements block_statement .  (101)

	.  reduce 101


state 105
	local_variable_declaration_statement : local_variable_declaration ',' .  (112)

	.  reduce 112


state 106
	method_declarator : ID '(' . formal_parameter ')'  (27)
	method_declarator : ID '(' . ')'  (28)

	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 90
	')'  shift 149
	.  error

	type  goto 150
	formal_parameter  goto 151
	reference_type  goto 49
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53


state 107
	assignment : left_hand_side assignment_operator expression .  (50)

	.  reduce 50


state 108
	type_name : ID .  (93)

	.  reduce 93


state 109
	interfaces : IMPLEMENT interface_type_list .  (33)
	interface_type_list : interface_type_list . ';' type_name  (35)

	';'  shift 152
	'{'  reduce 33


state 110
	interface_type_list : type_name .  (34)

	.  reduce 34


state 111
	field_declaration : error . ','  (17)

	','  shift 153
	.  error


state 112
	class_body : '{' class_body_declarations . '}'  (10)
	class_body_declarations : class_body_declarations . class_body_declaration  (12)

	error  shift 111
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 90
	'}'  shift 154
	.  error

	class_body_declaration  goto 155
	class_member_declaration  goto 114
	field_declaration  goto 115
	method_declaration  goto 116
	type  goto 117
	method_header  goto 19
	result_type  goto 20
	reference_type  goto 49
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53


state 113
	class_body_declarations : class_body_declaration .  (11)

	.  reduce 11


state 114
	class_body_declaration : class_member_declaration .  (13)

	.  reduce 13


state 115
	class_member_declaration : field_declaration .  (14)

	.  reduce 14


state 116
	class_member_declaration : method_declaration .  (15)

	.  reduce 15


state 117
	field_declaration : type . variable_declarators ','  (16)

	ID  shift 98
	.  error

	variable_declarators  goto 156
	variable_declarator  goto 100
	variable_declarator_id  goto 101


state 118
	class_declaration : CLASS ID interfaces class_body .  (9)

	.  reduce 9


state 119
	interface_body : '{' '}' . ','  (38)

	','  shift 157
	.  error


state 120
	interface_method_declaration : result_type . method_declarator  (41)

	ID  shift 62
	.  error

	method_declarator  goto 158


state 121
	interface_body : '{' interface_member_declaration . '}'  (37)
	interface_member_declaration : interface_member_declaration . interface_method_declaration  (40)

	VOID  shift 7
	'}'  shift 159
	.  error

	result_type  goto 120
	interface_method_declaration  goto 160


state 122
	interface_member_declaration : interface_method_declaration .  (39)

	.  reduce 39


state 123
	if_then_statement : IF '(' error ',' .  (131)

	.  reduce 131


state 124
	multiplicative_expression : TOD '(' . unary_expression ')'  (66)

	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	unary_expression  goto 161
	term  goto 87
	factor  goto 88


state 125
	factor : '-' CTE_DOUBLE .  (77)

	.  reduce 77


state 126
	factor : '-' CTE_UINT .  (79)

	.  reduce 79


state 127
	factor : '-' CTE_LONG .  (78)

	.  reduce 78


state 128
	term : '(' expression . ')'  (73)

	')'  shift 162
	.  error


129: shift/reduce conflict (shift 3, reduce 130) on IF
129: shift/reduce conflict (shift 4, reduce 130) on FOR
129: shift/reduce conflict (shift 6, reduce 130) on PRINT
129: shift/reduce conflict (shift 8, reduce 130) on ID
129: shift/reduce conflict (shift 163, reduce 130) on '{'
129: shift/reduce conflict (shift 10, reduce 130) on ','
state 129
	if_then_statement : IF '(' expression ')' . executable_block END_IF ','  (127)
	if_then_statement : IF '(' expression ')' . executable_statament END_IF ','  (128)
	if_then_statement : IF '(' expression ')' . executable_statament  (129)
	if_then_statement : IF '(' expression ')' .  (130)
	if_then_else_statement : IF '(' expression ')' . executable_block ELSE executable_block END_IF ','  (132)
	if_then_else_statement : IF '(' expression ')' . executable_block ELSE executable_statament END_IF ','  (133)
	if_then_else_statement : IF '(' expression ')' . executable_statament ELSE executable_statament END_IF ','  (134)
	if_then_else_statement : IF '(' expression ')' . executable_statament ELSE executable_block END_IF ','  (135)
	if_then_else_statement : IF '(' expression ')' . executable_statament ELSE executable_block ','  (136)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 163
	','  shift 10
	$end  reduce 130
	CLASS  reduce 130
	INTERFACE  reduce 130
	RETURN  reduce 130
	ELSE  reduce 130
	END_IF  reduce 130
	IMPL  reduce 130
	VOID  reduce 130
	LONG  reduce 130
	UINT  reduce 130
	DOUBLE  reduce 130
	'}'  reduce 130

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 164
	executable_statament  goto 165
	if_then_statement  goto 166
	if_then_else_statement  goto 167
	for_in_range_statement  goto 168
	print_statement  goto 169
	expression_statement  goto 170
	empty_statement  goto 171
	statement_expression  goto 32


state 130
	equality_expression : equality_expression EQUAL_OPERATOR . relational_expression  (54)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	relational_expression  goto 172
	additive_expression  goto 84
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 131
	equality_expression : equality_expression NOT_EQUAL_OPERATOR . relational_expression  (55)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	relational_expression  goto 173
	additive_expression  goto 84
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 132
	relational_expression : relational_expression GREATER_THAN_OR_EQUAL_OPERATOR . additive_expression  (59)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	additive_expression  goto 174
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 133
	relational_expression : relational_expression LESS_THAN_OR_EQUAL_OPERATOR . additive_expression  (60)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	additive_expression  goto 175
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 134
	relational_expression : relational_expression '<' . additive_expression  (57)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	additive_expression  goto 176
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 135
	relational_expression : relational_expression '>' . additive_expression  (58)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	additive_expression  goto 177
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 136
	additive_expression : additive_expression '+' . multiplicative_expression  (63)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	multiplicative_expression  goto 178
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 137
	additive_expression : additive_expression '-' . multiplicative_expression  (64)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	multiplicative_expression  goto 179
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 138
	multiplicative_expression : multiplicative_expression '*' . unary_expression  (67)

	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	unary_expression  goto 180
	term  goto 87
	factor  goto 88


state 139
	multiplicative_expression : multiplicative_expression '/' . unary_expression  (68)

	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	unary_expression  goto 181
	term  goto 87
	factor  goto 88


state 140
	multiplicative_expression : multiplicative_expression '%' . unary_expression  (69)

	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	unary_expression  goto 182
	term  goto 87
	factor  goto 88


state 141
	for_in_range_statement : FOR for_variable IN RANGE . '(' for_init for_end for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN RANGE . '(' for_init for_end for_update ')' executable_statament ','  (138)

	'('  shift 183
	.  error


state 142
	implement_for_declaration : IMPL FOR reference_type ':' . implement_for_body  (42)
	implement_for_declaration : IMPL FOR reference_type ':' . error ','  (43)

	error  shift 184
	'{'  shift 185
	.  error

	implement_for_body  goto 186


state 143
	method_invocation : ID '(' ')' ',' .  (83)

	.  reduce 83


state 144
	method_invocation : ID '(' real_parameter ')' . ','  (82)

	','  shift 187
	.  error


state 145
	block : '{' RETURN ',' '}' .  (96)

	.  reduce 96


state 146
	variable_declarators : variable_declarators ';' . variable_declarator  (19)

	ID  shift 98
	.  error

	variable_declarator  goto 188
	variable_declarator_id  goto 101


state 147
	variable_declarator : variable_declarator_id '=' . variable_initializer  (21)

	TOD  shift 74
	ID  shift 75
	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	'('  shift 80
	.  error

	variable_initializer  goto 189
	arithmetic_operation  goto 190
	additive_expression  goto 96
	multiplicative_expression  goto 85
	unary_expression  goto 86
	term  goto 87
	factor  goto 88


state 148
	block : '{' block_statements RETURN ',' . '}'  (94)

	'}'  shift 191
	.  error


state 149
	method_declarator : ID '(' ')' .  (28)

	.  reduce 28


state 150
	formal_parameter : type . variable_declarator_id  (31)

	ID  shift 98
	.  error

	variable_declarator_id  goto 192


state 151
	method_declarator : ID '(' formal_parameter . ')'  (27)

	')'  shift 193
	.  error


state 152
	interface_type_list : interface_type_list ';' . type_name  (35)

	ID  shift 108
	.  error

	type_name  goto 194


state 153
	field_declaration : error ',' .  (17)

	.  reduce 17


state 154
	class_body : '{' class_body_declarations '}' .  (10)

	.  reduce 10


state 155
	class_body_declarations : class_body_declarations class_body_declaration .  (12)

	.  reduce 12


state 156
	field_declaration : type variable_declarators . ','  (16)
	variable_declarators : variable_declarators . ';' variable_declarator  (19)

	','  shift 195
	';'  shift 146
	.  error


state 157
	interface_body : '{' '}' ',' .  (38)

	.  reduce 38


state 158
	interface_method_declaration : result_type method_declarator .  (41)

	.  reduce 41


state 159
	interface_body : '{' interface_member_declaration '}' .  (37)

	.  reduce 37


state 160
	interface_member_declaration : interface_member_declaration interface_method_declaration .  (40)

	.  reduce 40


state 161
	multiplicative_expression : TOD '(' unary_expression . ')'  (66)

	')'  shift 196
	.  error


state 162
	term : '(' expression ')' .  (73)

	.  reduce 73


state 163
	executable_block : '{' . executable_block_statements '}'  (98)
	executable_block : '{' . '}'  (99)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'}'  shift 197
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block_statements  goto 198
	executable_statament  goto 199
	if_then_statement  goto 166
	if_then_else_statement  goto 167
	for_in_range_statement  goto 168
	print_statement  goto 169
	expression_statement  goto 170
	empty_statement  goto 171
	statement_expression  goto 32


state 164
	if_then_statement : IF '(' expression ')' executable_block . END_IF ','  (127)
	if_then_else_statement : IF '(' expression ')' executable_block . ELSE executable_block END_IF ','  (132)
	if_then_else_statement : IF '(' expression ')' executable_block . ELSE executable_statament END_IF ','  (133)

	ELSE  shift 200
	END_IF  shift 201
	.  error


165: shift/reduce conflict (shift 202, reduce 129) on ELSE
165: shift/reduce conflict (shift 203, reduce 129) on END_IF
state 165
	if_then_statement : IF '(' expression ')' executable_statament . END_IF ','  (128)
	if_then_statement : IF '(' expression ')' executable_statament .  (129)
	if_then_else_statement : IF '(' expression ')' executable_statament . ELSE executable_statament END_IF ','  (134)
	if_then_else_statement : IF '(' expression ')' executable_statament . ELSE executable_block END_IF ','  (135)
	if_then_else_statement : IF '(' expression ')' executable_statament . ELSE executable_block ','  (136)

	ELSE  shift 202
	END_IF  shift 203
	$end  reduce 129
	CLASS  reduce 129
	INTERFACE  reduce 129
	RETURN  reduce 129
	IF  reduce 129
	FOR  reduce 129
	IMPL  reduce 129
	PRINT  reduce 129
	VOID  reduce 129
	LONG  reduce 129
	UINT  reduce 129
	DOUBLE  reduce 129
	ID  reduce 129
	'{'  reduce 129
	'}'  reduce 129
	','  reduce 129


state 166
	executable_statament : if_then_statement .  (106)

	.  reduce 106


state 167
	executable_statament : if_then_else_statement .  (107)

	.  reduce 107


state 168
	executable_statament : for_in_range_statement .  (108)

	.  reduce 108


state 169
	executable_statament : print_statement .  (109)

	.  reduce 109


state 170
	executable_statament : expression_statement .  (110)

	.  reduce 110


state 171
	executable_statament : empty_statement .  (111)

	.  reduce 111


state 172
	equality_expression : equality_expression EQUAL_OPERATOR relational_expression .  (54)
	relational_expression : relational_expression . '<' additive_expression  (57)
	relational_expression : relational_expression . '>' additive_expression  (58)
	relational_expression : relational_expression . GREATER_THAN_OR_EQUAL_OPERATOR additive_expression  (59)
	relational_expression : relational_expression . LESS_THAN_OR_EQUAL_OPERATOR additive_expression  (60)

	GREATER_THAN_OR_EQUAL_OPERATOR  shift 132
	LESS_THAN_OR_EQUAL_OPERATOR  shift 133
	'<'  shift 134
	'>'  shift 135
	$end  reduce 54
	CLASS  reduce 54
	INTERFACE  reduce 54
	RETURN  reduce 54
	IF  reduce 54
	ELSE  reduce 54
	END_IF  reduce 54
	FOR  reduce 54
	IMPL  reduce 54
	PRINT  reduce 54
	EQUAL_OPERATOR  reduce 54
	NOT_EQUAL_OPERATOR  reduce 54
	VOID  reduce 54
	LONG  reduce 54
	UINT  reduce 54
	DOUBLE  reduce 54
	ID  reduce 54
	'{'  reduce 54
	'}'  reduce 54
	','  reduce 54
	')'  reduce 54


state 173
	equality_expression : equality_expression NOT_EQUAL_OPERATOR relational_expression .  (55)
	relational_expression : relational_expression . '<' additive_expression  (57)
	relational_expression : relational_expression . '>' additive_expression  (58)
	relational_expression : relational_expression . GREATER_THAN_OR_EQUAL_OPERATOR additive_expression  (59)
	relational_expression : relational_expression . LESS_THAN_OR_EQUAL_OPERATOR additive_expression  (60)

	GREATER_THAN_OR_EQUAL_OPERATOR  shift 132
	LESS_THAN_OR_EQUAL_OPERATOR  shift 133
	'<'  shift 134
	'>'  shift 135
	$end  reduce 55
	CLASS  reduce 55
	INTERFACE  reduce 55
	RETURN  reduce 55
	IF  reduce 55
	ELSE  reduce 55
	END_IF  reduce 55
	FOR  reduce 55
	IMPL  reduce 55
	PRINT  reduce 55
	EQUAL_OPERATOR  reduce 55
	NOT_EQUAL_OPERATOR  reduce 55
	VOID  reduce 55
	LONG  reduce 55
	UINT  reduce 55
	DOUBLE  reduce 55
	ID  reduce 55
	'{'  reduce 55
	'}'  reduce 55
	','  reduce 55
	')'  reduce 55


state 174
	relational_expression : relational_expression GREATER_THAN_OR_EQUAL_OPERATOR additive_expression .  (59)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 136
	'-'  shift 137
	$end  reduce 59
	CLASS  reduce 59
	INTERFACE  reduce 59
	RETURN  reduce 59
	IF  reduce 59
	ELSE  reduce 59
	END_IF  reduce 59
	FOR  reduce 59
	IMPL  reduce 59
	PRINT  reduce 59
	EQUAL_OPERATOR  reduce 59
	NOT_EQUAL_OPERATOR  reduce 59
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 59
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 59
	VOID  reduce 59
	LONG  reduce 59
	UINT  reduce 59
	DOUBLE  reduce 59
	ID  reduce 59
	'{'  reduce 59
	'}'  reduce 59
	','  reduce 59
	')'  reduce 59
	'<'  reduce 59
	'>'  reduce 59


state 175
	relational_expression : relational_expression LESS_THAN_OR_EQUAL_OPERATOR additive_expression .  (60)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 136
	'-'  shift 137
	$end  reduce 60
	CLASS  reduce 60
	INTERFACE  reduce 60
	RETURN  reduce 60
	IF  reduce 60
	ELSE  reduce 60
	END_IF  reduce 60
	FOR  reduce 60
	IMPL  reduce 60
	PRINT  reduce 60
	EQUAL_OPERATOR  reduce 60
	NOT_EQUAL_OPERATOR  reduce 60
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 60
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 60
	VOID  reduce 60
	LONG  reduce 60
	UINT  reduce 60
	DOUBLE  reduce 60
	ID  reduce 60
	'{'  reduce 60
	'}'  reduce 60
	','  reduce 60
	')'  reduce 60
	'<'  reduce 60
	'>'  reduce 60


state 176
	relational_expression : relational_expression '<' additive_expression .  (57)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 136
	'-'  shift 137
	$end  reduce 57
	CLASS  reduce 57
	INTERFACE  reduce 57
	RETURN  reduce 57
	IF  reduce 57
	ELSE  reduce 57
	END_IF  reduce 57
	FOR  reduce 57
	IMPL  reduce 57
	PRINT  reduce 57
	EQUAL_OPERATOR  reduce 57
	NOT_EQUAL_OPERATOR  reduce 57
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 57
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 57
	VOID  reduce 57
	LONG  reduce 57
	UINT  reduce 57
	DOUBLE  reduce 57
	ID  reduce 57
	'{'  reduce 57
	'}'  reduce 57
	','  reduce 57
	')'  reduce 57
	'<'  reduce 57
	'>'  reduce 57


state 177
	relational_expression : relational_expression '>' additive_expression .  (58)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 136
	'-'  shift 137
	$end  reduce 58
	CLASS  reduce 58
	INTERFACE  reduce 58
	RETURN  reduce 58
	IF  reduce 58
	ELSE  reduce 58
	END_IF  reduce 58
	FOR  reduce 58
	IMPL  reduce 58
	PRINT  reduce 58
	EQUAL_OPERATOR  reduce 58
	NOT_EQUAL_OPERATOR  reduce 58
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 58
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 58
	VOID  reduce 58
	LONG  reduce 58
	UINT  reduce 58
	DOUBLE  reduce 58
	ID  reduce 58
	'{'  reduce 58
	'}'  reduce 58
	','  reduce 58
	')'  reduce 58
	'<'  reduce 58
	'>'  reduce 58


state 178
	additive_expression : additive_expression '+' multiplicative_expression .  (63)
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (67)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (68)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (69)

	'*'  shift 138
	'/'  shift 139
	'%'  shift 140
	$end  reduce 63
	CLASS  reduce 63
	INTERFACE  reduce 63
	RETURN  reduce 63
	IF  reduce 63
	ELSE  reduce 63
	END_IF  reduce 63
	FOR  reduce 63
	IMPL  reduce 63
	PRINT  reduce 63
	EQUAL_OPERATOR  reduce 63
	NOT_EQUAL_OPERATOR  reduce 63
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 63
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 63
	VOID  reduce 63
	LONG  reduce 63
	UINT  reduce 63
	DOUBLE  reduce 63
	ID  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'{'  reduce 63
	'}'  reduce 63
	','  reduce 63
	';'  reduce 63
	')'  reduce 63
	'<'  reduce 63
	'>'  reduce 63


state 179
	additive_expression : additive_expression '-' multiplicative_expression .  (64)
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (67)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (68)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (69)

	'*'  shift 138
	'/'  shift 139
	'%'  shift 140
	$end  reduce 64
	CLASS  reduce 64
	INTERFACE  reduce 64
	RETURN  reduce 64
	IF  reduce 64
	ELSE  reduce 64
	END_IF  reduce 64
	FOR  reduce 64
	IMPL  reduce 64
	PRINT  reduce 64
	EQUAL_OPERATOR  reduce 64
	NOT_EQUAL_OPERATOR  reduce 64
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 64
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 64
	VOID  reduce 64
	LONG  reduce 64
	UINT  reduce 64
	DOUBLE  reduce 64
	ID  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	'{'  reduce 64
	'}'  reduce 64
	','  reduce 64
	';'  reduce 64
	')'  reduce 64
	'<'  reduce 64
	'>'  reduce 64


state 180
	multiplicative_expression : multiplicative_expression '*' unary_expression .  (67)

	.  reduce 67


state 181
	multiplicative_expression : multiplicative_expression '/' unary_expression .  (68)

	.  reduce 68


state 182
	multiplicative_expression : multiplicative_expression '%' unary_expression .  (69)

	.  reduce 69


state 183
	for_in_range_statement : FOR for_variable IN RANGE '(' . for_init for_end for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN RANGE '(' . for_init for_end for_update ')' executable_statament ','  (138)

	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	.  error

	factor  goto 204
	for_init  goto 205


state 184
	implement_for_declaration : IMPL FOR reference_type ':' error . ','  (43)

	','  shift 206
	.  error


state 185
	implement_for_body : '{' . implement_for_body_declarations '}'  (44)

	VOID  shift 7
	.  error

	method_header  goto 207
	result_type  goto 20
	implement_for_body_declarations  goto 208
	implement_for_body_declaration  goto 209
	implement_for_method_declaration  goto 210


state 186
	implement_for_declaration : IMPL FOR reference_type ':' implement_for_body .  (42)

	.  reduce 42


state 187
	method_invocation : ID '(' real_parameter ')' ',' .  (82)

	.  reduce 82


state 188
	variable_declarators : variable_declarators ';' variable_declarator .  (19)

	.  reduce 19


state 189
	variable_declarator : variable_declarator_id '=' variable_initializer .  (21)

	.  reduce 21


state 190
	variable_initializer : arithmetic_operation .  (23)

	.  reduce 23


state 191
	block : '{' block_statements RETURN ',' '}' .  (94)

	.  reduce 94


state 192
	formal_parameter : type variable_declarator_id .  (31)

	.  reduce 31


state 193
	method_declarator : ID '(' formal_parameter ')' .  (27)

	.  reduce 27


state 194
	interface_type_list : interface_type_list ';' type_name .  (35)

	.  reduce 35


state 195
	field_declaration : type variable_declarators ',' .  (16)

	.  reduce 16


state 196
	multiplicative_expression : TOD '(' unary_expression ')' .  (66)

	.  reduce 66


state 197
	executable_block : '{' '}' .  (99)

	.  reduce 99


state 198
	executable_block : '{' executable_block_statements . '}'  (98)
	executable_block_statements : executable_block_statements . executable_statament  (103)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'}'  shift 211
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_statament  goto 212
	if_then_statement  goto 166
	if_then_else_statement  goto 167
	for_in_range_statement  goto 168
	print_statement  goto 169
	expression_statement  goto 170
	empty_statement  goto 171
	statement_expression  goto 32


state 199
	executable_block_statements : executable_statament .  (102)

	.  reduce 102


state 200
	if_then_else_statement : IF '(' expression ')' executable_block ELSE . executable_block END_IF ','  (132)
	if_then_else_statement : IF '(' expression ')' executable_block ELSE . executable_statament END_IF ','  (133)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 163
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 213
	executable_statament  goto 214
	if_then_statement  goto 166
	if_then_else_statement  goto 167
	for_in_range_statement  goto 168
	print_statement  goto 169
	expression_statement  goto 170
	empty_statement  goto 171
	statement_expression  goto 32


state 201
	if_then_statement : IF '(' expression ')' executable_block END_IF . ','  (127)

	','  shift 215
	.  error


state 202
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE . executable_statament END_IF ','  (134)
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE . executable_block END_IF ','  (135)
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE . executable_block ','  (136)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 163
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 216
	executable_statament  goto 217
	if_then_statement  goto 166
	if_then_else_statement  goto 167
	for_in_range_statement  goto 168
	print_statement  goto 169
	expression_statement  goto 170
	empty_statement  goto 171
	statement_expression  goto 32


state 203
	if_then_statement : IF '(' expression ')' executable_statament END_IF . ','  (128)

	','  shift 218
	.  error


state 204
	for_init : factor .  (140)

	.  reduce 140


state 205
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init . for_end for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init . for_end for_update ')' executable_statament ','  (138)

	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	.  error

	factor  goto 219
	for_end  goto 220


state 206
	implement_for_declaration : IMPL FOR reference_type ':' error ',' .  (43)

	.  reduce 43


state 207
	implement_for_method_declaration : method_header . implement_for_method_body  (48)

	'{'  shift 9
	','  shift 59
	.  error

	method_body  goto 221
	block  goto 61
	implement_for_method_body  goto 222


state 208
	implement_for_body : '{' implement_for_body_declarations . '}'  (44)
	implement_for_body_declarations : implement_for_body_declarations . implement_for_body_declaration  (46)

	VOID  shift 7
	'}'  shift 223
	.  error

	method_header  goto 207
	result_type  goto 20
	implement_for_body_declaration  goto 224
	implement_for_method_declaration  goto 210


state 209
	implement_for_body_declarations : implement_for_body_declaration .  (45)

	.  reduce 45


state 210
	implement_for_body_declaration : implement_for_method_declaration .  (47)

	.  reduce 47


state 211
	executable_block : '{' executable_block_statements '}' .  (98)

	.  reduce 98


state 212
	executable_block_statements : executable_block_statements executable_statament .  (103)

	.  reduce 103


state 213
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block . END_IF ','  (132)

	END_IF  shift 225
	.  error


state 214
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_statament . END_IF ','  (133)

	END_IF  shift 226
	.  error


state 215
	if_then_statement : IF '(' expression ')' executable_block END_IF ',' .  (127)

	.  reduce 127


state 216
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block . END_IF ','  (135)
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block . ','  (136)

	END_IF  shift 227
	','  shift 228
	.  error


state 217
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_statament . END_IF ','  (134)

	END_IF  shift 229
	.  error


state 218
	if_then_statement : IF '(' expression ')' executable_statament END_IF ',' .  (128)

	.  reduce 128


state 219
	for_end : factor .  (142)

	.  reduce 142


state 220
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end . for_update ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end . for_update ')' executable_statament ','  (138)

	CTE_DOUBLE  shift 76
	CTE_UINT  shift 77
	CTE_LONG  shift 78
	'-'  shift 79
	.  error

	factor  goto 230
	for_update  goto 231


state 221
	implement_for_method_body : method_body .  (49)

	.  reduce 49


state 222
	implement_for_method_declaration : method_header implement_for_method_body .  (48)

	.  reduce 48


state 223
	implement_for_body : '{' implement_for_body_declarations '}' .  (44)

	.  reduce 44


state 224
	implement_for_body_declarations : implement_for_body_declarations implement_for_body_declaration .  (46)

	.  reduce 46


state 225
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block END_IF . ','  (132)

	','  shift 232
	.  error


state 226
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_statament END_IF . ','  (133)

	','  shift 233
	.  error


state 227
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block END_IF . ','  (135)

	','  shift 234
	.  error


state 228
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block ',' .  (136)

	.  reduce 136


state 229
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_statament END_IF . ','  (134)

	','  shift 235
	.  error


state 230
	for_update : factor .  (141)

	.  reduce 141


state 231
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update . ')' executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update . ')' executable_statament ','  (138)

	')'  shift 236
	.  error


state 232
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block END_IF ',' .  (132)

	.  reduce 132


state 233
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_statament END_IF ',' .  (133)

	.  reduce 133


state 234
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block END_IF ',' .  (135)

	.  reduce 135


state 235
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_statament END_IF ',' .  (134)

	.  reduce 134


state 236
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' . executable_block ','  (137)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' . executable_statament ','  (138)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 163
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 237
	executable_statament  goto 238
	if_then_statement  goto 166
	if_then_else_statement  goto 167
	for_in_range_statement  goto 168
	print_statement  goto 169
	expression_statement  goto 170
	empty_statement  goto 171
	statement_expression  goto 32


state 237
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_block . ','  (137)

	','  shift 239
	.  error


state 238
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament . ','  (138)

	','  shift 240
	.  error


state 239
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_block ',' .  (137)

	.  reduce 137


state 240
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament ',' .  (138)

	.  reduce 138


State 129 contains 6 shift/reduce conflicts.
State 165 contains 2 shift/reduce conflicts.


44 terminals, 74 nonterminals
145 grammar rules, 241 states
