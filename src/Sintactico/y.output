   0  $accept : program $end

   1  program : type_declarations

   2  type_declarations : type_declaration
   3                    | type_declarations type_declaration

   4  type_declaration : class_declaration
   5                   | interface_declaration
   6                   | implement_for_declaration
   7                   | statement

   8  class_declaration : CLASS ID class_body
   9                    | CLASS ID interfaces class_body

  10  class_body : '{' class_body_declarations '}'

  11  class_body_declarations : class_body_declaration
  12                          | class_body_declarations class_body_declaration

  13  class_body_declaration : class_member_declaration

  14  class_member_declaration : field_declaration
  15                           | method_declaration

  16  field_declaration : type variable_declarators ','
  17                    | error ','

  18  variable_declarators : variable_declarator
  19                       | variable_declarators ';' variable_declarator

  20  variable_declarator : variable_declarator_id
  21                      | variable_declarator_id '=' variable_initializer

  22  variable_declarator_id : ID

  23  variable_initializer : arithmetic_operation

  24  method_declaration : method_header method_body

  25  method_header : result_type method_declarator

  26  result_type : VOID

  27  method_declarator : ID '(' formal_parameter ')'
  28                    | ID '(' ')'

  29  method_body : block
  30              | ','

  31  formal_parameter : type variable_declarator_id

  32  real_parameter : arithmetic_operation

  33  interfaces : IMPLEMENT interface_type_list

  34  interface_type_list : type_name
  35                      | interface_type_list ';' type_name

  36  interface_declaration : INTERFACE ID interface_body

  37  interface_body : '{' interface_member_declaration '}'
  38                 | '{' '}' ','

  39  interface_member_declaration : interface_method_declaration
  40                               | interface_member_declaration interface_method_declaration

  41  interface_method_declaration : result_type method_declarator

  42  implement_for_declaration : IMPL FOR reference_type ':' implement_for_body
  43                            | IMPL FOR reference_type ':' error ','

  44  implement_for_body : '{' implement_for_body_declarations '}'

  45  implement_for_body_declarations : implement_for_body_declaration
  46                                  | implement_for_body_declarations implement_for_body_declaration

  47  implement_for_body_declaration : implement_for_method_declaration

  48  implement_for_method_declaration : method_header implement_for_method_body

  49  implement_for_method_body : method_body

  50  assignment : left_hand_side assignment_operator expression

  51  left_hand_side : ID

  52  expression : equality_expression

  53  equality_expression : relational_expression
  54                      | equality_expression EQUAL_OPERATOR relational_expression
  55                      | equality_expression NOT_EQUAL_OPERATOR relational_expression

  56  relational_expression : additive_expression
  57                        | relational_expression '<' additive_expression
  58                        | relational_expression '>' additive_expression
  59                        | relational_expression GREATER_THAN_OR_EQUAL_OPERATOR additive_expression
  60                        | relational_expression LESS_THAN_OR_EQUAL_OPERATOR additive_expression

  61  arithmetic_operation : additive_expression

  62  additive_expression : multiplicative_expression
  63                      | additive_expression '+' multiplicative_expression
  64                      | additive_expression '-' multiplicative_expression

  65  multiplicative_expression : unary_expression
  66                            | TOD '(' unary_expression ')'
  67                            | multiplicative_expression '*' unary_expression
  68                            | multiplicative_expression '/' unary_expression
  69                            | multiplicative_expression '%' unary_expression

  70  unary_expression : term
  71                   | ID

  72  term : factor
  73       | '(' expression ')'

  74  factor : CTE_DOUBLE
  75         | CTE_UINT
  76         | CTE_LONG

  77  assignment_operator : '='
  78                      | MINUS_ASSIGN

  79  method_invocation : ID '(' real_parameter ')' ','
  80                    | ID '(' ')' ','

  81  type : primitive_type
  82       | reference_type

  83  primitive_type : numeric_type

  84  reference_type : ID

  85  numeric_type : integral_type
  86               | floating_type

  87  integral_type : UINT
  88                | LONG

  89  floating_type : DOUBLE

  90  type_name : ID

  91  block : '{' block_statements RETURN ',' '}'
  92        | '{' block_statements '}'
  93        | '{' RETURN ',' '}'
  94        | '{' '}'

  95  executable_block : '{' executable_block_statements '}'
  96                   | '{' '}'

  97  block_statements : block_statement
  98                   | block_statements block_statement

  99  executable_block_statements : executable_statament
 100                              | executable_block_statements executable_statament

 101  block_statement : local_variable_declaration_statement
 102                  | statement

 103  executable_statament : if_then_statement
 104                       | if_then_else_statement
 105                       | for_in_range_statement
 106                       | print_statement
 107                       | expression_statement
 108                       | empty_statement

 109  local_variable_declaration_statement : local_variable_declaration ','

 110  local_variable_declaration : type variable_declarators

 111  statement : statement_without_trailing_substatement
 112            | if_then_statement
 113            | if_then_else_statement
 114            | for_in_range_statement
 115            | method_declaration
 116            | print_statement

 117  statement_without_trailing_substatement : block
 118                                          | empty_statement
 119                                          | expression_statement

 120  expression_statement : statement_expression

 121  statement_expression : assignment
 122                       | method_invocation

 123  empty_statement : ','

 124  if_then_statement : IF '(' expression ')' executable_block END_IF ','
 125                    | IF '(' expression ')' executable_statament END_IF ','

 126  if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block END_IF ','
 127                         | IF '(' expression ')' executable_block ELSE executable_statament END_IF ','
 128                         | IF '(' expression ')' executable_statament ELSE executable_statament END_IF ','
 129                         | IF '(' expression ')' executable_statament ELSE executable_block END_IF ','

 130  for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_block ','
 131                         | FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament ','

 132  for_variable : ID

 133  for_init : factor

 134  for_update : factor

 135  for_end : factor

 136  print_statement : PRINT CADENA ','
 137                  | PRINT

state 0
	$accept : . program $end  (0)

	CLASS  shift 1
	INTERFACE  shift 2
	IF  shift 3
	FOR  shift 4
	IMPL  shift 5
	PRINT  shift 6
	VOID  shift 7
	ID  shift 8
	'{'  shift 9
	','  shift 10
	.  error

	program  goto 11
	type_declarations  goto 12
	type_declaration  goto 13
	class_declaration  goto 14
	interface_declaration  goto 15
	implement_for_declaration  goto 16
	statement  goto 17
	method_declaration  goto 18
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 1
	class_declaration : CLASS . ID class_body  (8)
	class_declaration : CLASS . ID interfaces class_body  (9)

	ID  shift 33
	.  error


state 2
	interface_declaration : INTERFACE . ID interface_body  (36)

	ID  shift 34
	.  error


state 3
	if_then_statement : IF . '(' expression ')' executable_block END_IF ','  (124)
	if_then_statement : IF . '(' expression ')' executable_statament END_IF ','  (125)
	if_then_else_statement : IF . '(' expression ')' executable_block ELSE executable_block END_IF ','  (126)
	if_then_else_statement : IF . '(' expression ')' executable_block ELSE executable_statament END_IF ','  (127)
	if_then_else_statement : IF . '(' expression ')' executable_statament ELSE executable_statament END_IF ','  (128)
	if_then_else_statement : IF . '(' expression ')' executable_statament ELSE executable_block END_IF ','  (129)

	'('  shift 35
	.  error


state 4
	for_in_range_statement : FOR . for_variable IN RANGE '(' for_init for_end for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR . for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament ','  (131)

	ID  shift 36
	.  error

	for_variable  goto 37


state 5
	implement_for_declaration : IMPL . FOR reference_type ':' implement_for_body  (42)
	implement_for_declaration : IMPL . FOR reference_type ':' error ','  (43)

	FOR  shift 38
	.  error


state 6
	print_statement : PRINT . CADENA ','  (136)
	print_statement : PRINT .  (137)

	CADENA  shift 39
	$end  reduce 137
	CLASS  reduce 137
	INTERFACE  reduce 137
	RETURN  reduce 137
	IF  reduce 137
	ELSE  reduce 137
	END_IF  reduce 137
	FOR  reduce 137
	IMPL  reduce 137
	PRINT  reduce 137
	VOID  reduce 137
	LONG  reduce 137
	UINT  reduce 137
	DOUBLE  reduce 137
	ID  reduce 137
	'{'  reduce 137
	'}'  reduce 137
	','  reduce 137


state 7
	result_type : VOID .  (26)

	.  reduce 26


state 8
	left_hand_side : ID .  (51)
	method_invocation : ID . '(' real_parameter ')' ','  (79)
	method_invocation : ID . '(' ')' ','  (80)

	'('  shift 40
	MINUS_ASSIGN  reduce 51
	'='  reduce 51


state 9
	block : '{' . block_statements RETURN ',' '}'  (91)
	block : '{' . block_statements '}'  (92)
	block : '{' . RETURN ',' '}'  (93)
	block : '{' . '}'  (94)

	RETURN  shift 41
	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 45
	'{'  shift 9
	'}'  shift 46
	','  shift 10
	.  error

	statement  goto 47
	method_declaration  goto 18
	type  goto 48
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	reference_type  goto 49
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53
	block_statements  goto 54
	block_statement  goto 55
	local_variable_declaration_statement  goto 56
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	local_variable_declaration  goto 57
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 10
	empty_statement : ',' .  (123)

	.  reduce 123


state 11
	$accept : program . $end  (0)

	$end  accept


state 12
	program : type_declarations .  (1)
	type_declarations : type_declarations . type_declaration  (3)

	CLASS  shift 1
	INTERFACE  shift 2
	IF  shift 3
	FOR  shift 4
	IMPL  shift 5
	PRINT  shift 6
	VOID  shift 7
	ID  shift 8
	'{'  shift 9
	','  shift 10
	$end  reduce 1

	type_declaration  goto 58
	class_declaration  goto 14
	interface_declaration  goto 15
	implement_for_declaration  goto 16
	statement  goto 17
	method_declaration  goto 18
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 13
	type_declarations : type_declaration .  (2)

	.  reduce 2


state 14
	type_declaration : class_declaration .  (4)

	.  reduce 4


state 15
	type_declaration : interface_declaration .  (5)

	.  reduce 5


state 16
	type_declaration : implement_for_declaration .  (6)

	.  reduce 6


state 17
	type_declaration : statement .  (7)

	.  reduce 7


state 18
	statement : method_declaration .  (115)

	.  reduce 115


state 19
	method_declaration : method_header . method_body  (24)

	'{'  shift 9
	','  shift 59
	.  error

	method_body  goto 60
	block  goto 61


state 20
	method_header : result_type . method_declarator  (25)

	ID  shift 62
	.  error

	method_declarator  goto 63


state 21
	statement_without_trailing_substatement : block .  (117)

	.  reduce 117


state 22
	statement_expression : assignment .  (121)

	.  reduce 121


state 23
	assignment : left_hand_side . assignment_operator expression  (50)

	MINUS_ASSIGN  shift 64
	'='  shift 65
	.  error

	assignment_operator  goto 66


state 24
	statement_expression : method_invocation .  (122)

	.  reduce 122


state 25
	statement : if_then_statement .  (112)

	.  reduce 112


state 26
	statement : if_then_else_statement .  (113)

	.  reduce 113


state 27
	statement : for_in_range_statement .  (114)

	.  reduce 114


state 28
	statement : print_statement .  (116)

	.  reduce 116


state 29
	statement_without_trailing_substatement : expression_statement .  (119)

	.  reduce 119


state 30
	statement_without_trailing_substatement : empty_statement .  (118)

	.  reduce 118


state 31
	statement : statement_without_trailing_substatement .  (111)

	.  reduce 111


state 32
	expression_statement : statement_expression .  (120)

	.  reduce 120


state 33
	class_declaration : CLASS ID . class_body  (8)
	class_declaration : CLASS ID . interfaces class_body  (9)

	IMPLEMENT  shift 67
	'{'  shift 68
	.  error

	class_body  goto 69
	interfaces  goto 70


state 34
	interface_declaration : INTERFACE ID . interface_body  (36)

	'{'  shift 71
	.  error

	interface_body  goto 72


state 35
	if_then_statement : IF '(' . expression ')' executable_block END_IF ','  (124)
	if_then_statement : IF '(' . expression ')' executable_statament END_IF ','  (125)
	if_then_else_statement : IF '(' . expression ')' executable_block ELSE executable_block END_IF ','  (126)
	if_then_else_statement : IF '(' . expression ')' executable_block ELSE executable_statament END_IF ','  (127)
	if_then_else_statement : IF '(' . expression ')' executable_statament ELSE executable_statament END_IF ','  (128)
	if_then_else_statement : IF '(' . expression ')' executable_statament ELSE executable_block END_IF ','  (129)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	expression  goto 79
	equality_expression  goto 80
	relational_expression  goto 81
	additive_expression  goto 82
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 36
	for_variable : ID .  (132)

	.  reduce 132


state 37
	for_in_range_statement : FOR for_variable . IN RANGE '(' for_init for_end for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable . IN RANGE '(' for_init for_end for_update ')' executable_statament ','  (131)

	IN  shift 87
	.  error


state 38
	implement_for_declaration : IMPL FOR . reference_type ':' implement_for_body  (42)
	implement_for_declaration : IMPL FOR . reference_type ':' error ','  (43)

	ID  shift 88
	.  error

	reference_type  goto 89


state 39
	print_statement : PRINT CADENA . ','  (136)

	','  shift 90
	.  error


state 40
	method_invocation : ID '(' . real_parameter ')' ','  (79)
	method_invocation : ID '(' . ')' ','  (80)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	')'  shift 91
	.  error

	arithmetic_operation  goto 92
	real_parameter  goto 93
	additive_expression  goto 94
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 41
	block : '{' RETURN . ',' '}'  (93)

	','  shift 95
	.  error


state 42
	integral_type : LONG .  (88)

	.  reduce 88


state 43
	integral_type : UINT .  (87)

	.  reduce 87


state 44
	floating_type : DOUBLE .  (89)

	.  reduce 89


state 45
	left_hand_side : ID .  (51)
	method_invocation : ID . '(' real_parameter ')' ','  (79)
	method_invocation : ID . '(' ')' ','  (80)
	reference_type : ID .  (84)

	'('  shift 40
	MINUS_ASSIGN  reduce 51
	ID  reduce 84
	'='  reduce 51


state 46
	block : '{' '}' .  (94)

	.  reduce 94


state 47
	block_statement : statement .  (102)

	.  reduce 102


state 48
	local_variable_declaration : type . variable_declarators  (110)

	ID  shift 96
	.  error

	variable_declarators  goto 97
	variable_declarator  goto 98
	variable_declarator_id  goto 99


state 49
	type : reference_type .  (82)

	.  reduce 82


state 50
	type : primitive_type .  (81)

	.  reduce 81


state 51
	primitive_type : numeric_type .  (83)

	.  reduce 83


state 52
	numeric_type : integral_type .  (85)

	.  reduce 85


state 53
	numeric_type : floating_type .  (86)

	.  reduce 86


state 54
	block : '{' block_statements . RETURN ',' '}'  (91)
	block : '{' block_statements . '}'  (92)
	block_statements : block_statements . block_statement  (98)

	RETURN  shift 100
	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 45
	'{'  shift 9
	'}'  shift 101
	','  shift 10
	.  error

	statement  goto 47
	method_declaration  goto 18
	type  goto 48
	method_header  goto 19
	result_type  goto 20
	block  goto 21
	reference_type  goto 49
	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53
	block_statement  goto 102
	local_variable_declaration_statement  goto 56
	if_then_statement  goto 25
	if_then_else_statement  goto 26
	for_in_range_statement  goto 27
	print_statement  goto 28
	expression_statement  goto 29
	empty_statement  goto 30
	local_variable_declaration  goto 57
	statement_without_trailing_substatement  goto 31
	statement_expression  goto 32


state 55
	block_statements : block_statement .  (97)

	.  reduce 97


state 56
	block_statement : local_variable_declaration_statement .  (101)

	.  reduce 101


state 57
	local_variable_declaration_statement : local_variable_declaration . ','  (109)

	','  shift 103
	.  error


state 58
	type_declarations : type_declarations type_declaration .  (3)

	.  reduce 3


state 59
	method_body : ',' .  (30)

	.  reduce 30


state 60
	method_declaration : method_header method_body .  (24)

	.  reduce 24


state 61
	method_body : block .  (29)

	.  reduce 29


state 62
	method_declarator : ID . '(' formal_parameter ')'  (27)
	method_declarator : ID . '(' ')'  (28)

	'('  shift 104
	.  error


state 63
	method_header : result_type method_declarator .  (25)

	.  reduce 25


state 64
	assignment_operator : MINUS_ASSIGN .  (78)

	.  reduce 78


state 65
	assignment_operator : '=' .  (77)

	.  reduce 77


state 66
	assignment : left_hand_side assignment_operator . expression  (50)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	expression  goto 105
	equality_expression  goto 80
	relational_expression  goto 81
	additive_expression  goto 82
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 67
	interfaces : IMPLEMENT . interface_type_list  (33)

	ID  shift 106
	.  error

	interface_type_list  goto 107
	type_name  goto 108


state 68
	class_body : '{' . class_body_declarations '}'  (10)

	error  shift 109
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 88
	.  error

	class_body_declarations  goto 110
	class_body_declaration  goto 111
	class_member_declaration  goto 112
	field_declaration  goto 113
	method_declaration  goto 114
	type  goto 115
	method_header  goto 19
	result_type  goto 20
	reference_type  goto 49
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53


state 69
	class_declaration : CLASS ID class_body .  (8)

	.  reduce 8


state 70
	class_declaration : CLASS ID interfaces . class_body  (9)

	'{'  shift 68
	.  error

	class_body  goto 116


state 71
	interface_body : '{' . interface_member_declaration '}'  (37)
	interface_body : '{' . '}' ','  (38)

	VOID  shift 7
	'}'  shift 117
	.  error

	result_type  goto 118
	interface_member_declaration  goto 119
	interface_method_declaration  goto 120


state 72
	interface_declaration : INTERFACE ID interface_body .  (36)

	.  reduce 36


state 73
	multiplicative_expression : TOD . '(' unary_expression ')'  (66)

	'('  shift 121
	.  error


state 74
	unary_expression : ID .  (71)

	.  reduce 71


state 75
	factor : CTE_DOUBLE .  (74)

	.  reduce 74


state 76
	factor : CTE_UINT .  (75)

	.  reduce 75


state 77
	factor : CTE_LONG .  (76)

	.  reduce 76


state 78
	term : '(' . expression ')'  (73)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	expression  goto 122
	equality_expression  goto 80
	relational_expression  goto 81
	additive_expression  goto 82
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 79
	if_then_statement : IF '(' expression . ')' executable_block END_IF ','  (124)
	if_then_statement : IF '(' expression . ')' executable_statament END_IF ','  (125)
	if_then_else_statement : IF '(' expression . ')' executable_block ELSE executable_block END_IF ','  (126)
	if_then_else_statement : IF '(' expression . ')' executable_block ELSE executable_statament END_IF ','  (127)
	if_then_else_statement : IF '(' expression . ')' executable_statament ELSE executable_statament END_IF ','  (128)
	if_then_else_statement : IF '(' expression . ')' executable_statament ELSE executable_block END_IF ','  (129)

	')'  shift 123
	.  error


state 80
	expression : equality_expression .  (52)
	equality_expression : equality_expression . EQUAL_OPERATOR relational_expression  (54)
	equality_expression : equality_expression . NOT_EQUAL_OPERATOR relational_expression  (55)

	EQUAL_OPERATOR  shift 124
	NOT_EQUAL_OPERATOR  shift 125
	$end  reduce 52
	CLASS  reduce 52
	INTERFACE  reduce 52
	RETURN  reduce 52
	IF  reduce 52
	ELSE  reduce 52
	END_IF  reduce 52
	FOR  reduce 52
	IMPL  reduce 52
	PRINT  reduce 52
	VOID  reduce 52
	LONG  reduce 52
	UINT  reduce 52
	DOUBLE  reduce 52
	ID  reduce 52
	'{'  reduce 52
	'}'  reduce 52
	','  reduce 52
	')'  reduce 52


state 81
	equality_expression : relational_expression .  (53)
	relational_expression : relational_expression . '<' additive_expression  (57)
	relational_expression : relational_expression . '>' additive_expression  (58)
	relational_expression : relational_expression . GREATER_THAN_OR_EQUAL_OPERATOR additive_expression  (59)
	relational_expression : relational_expression . LESS_THAN_OR_EQUAL_OPERATOR additive_expression  (60)

	GREATER_THAN_OR_EQUAL_OPERATOR  shift 126
	LESS_THAN_OR_EQUAL_OPERATOR  shift 127
	'<'  shift 128
	'>'  shift 129
	$end  reduce 53
	CLASS  reduce 53
	INTERFACE  reduce 53
	RETURN  reduce 53
	IF  reduce 53
	ELSE  reduce 53
	END_IF  reduce 53
	FOR  reduce 53
	IMPL  reduce 53
	PRINT  reduce 53
	EQUAL_OPERATOR  reduce 53
	NOT_EQUAL_OPERATOR  reduce 53
	VOID  reduce 53
	LONG  reduce 53
	UINT  reduce 53
	DOUBLE  reduce 53
	ID  reduce 53
	'{'  reduce 53
	'}'  reduce 53
	','  reduce 53
	')'  reduce 53


state 82
	relational_expression : additive_expression .  (56)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 130
	'-'  shift 131
	$end  reduce 56
	CLASS  reduce 56
	INTERFACE  reduce 56
	RETURN  reduce 56
	IF  reduce 56
	ELSE  reduce 56
	END_IF  reduce 56
	FOR  reduce 56
	IMPL  reduce 56
	PRINT  reduce 56
	EQUAL_OPERATOR  reduce 56
	NOT_EQUAL_OPERATOR  reduce 56
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 56
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 56
	VOID  reduce 56
	LONG  reduce 56
	UINT  reduce 56
	DOUBLE  reduce 56
	ID  reduce 56
	'{'  reduce 56
	'}'  reduce 56
	','  reduce 56
	')'  reduce 56
	'<'  reduce 56
	'>'  reduce 56


state 83
	additive_expression : multiplicative_expression .  (62)
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (67)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (68)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (69)

	'*'  shift 132
	'/'  shift 133
	'%'  shift 134
	$end  reduce 62
	CLASS  reduce 62
	INTERFACE  reduce 62
	RETURN  reduce 62
	IF  reduce 62
	ELSE  reduce 62
	END_IF  reduce 62
	FOR  reduce 62
	IMPL  reduce 62
	PRINT  reduce 62
	EQUAL_OPERATOR  reduce 62
	NOT_EQUAL_OPERATOR  reduce 62
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 62
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 62
	VOID  reduce 62
	LONG  reduce 62
	UINT  reduce 62
	DOUBLE  reduce 62
	ID  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'{'  reduce 62
	'}'  reduce 62
	','  reduce 62
	';'  reduce 62
	')'  reduce 62
	'<'  reduce 62
	'>'  reduce 62


state 84
	multiplicative_expression : unary_expression .  (65)

	.  reduce 65


state 85
	unary_expression : term .  (70)

	.  reduce 70


state 86
	term : factor .  (72)

	.  reduce 72


state 87
	for_in_range_statement : FOR for_variable IN . RANGE '(' for_init for_end for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN . RANGE '(' for_init for_end for_update ')' executable_statament ','  (131)

	RANGE  shift 135
	.  error


state 88
	reference_type : ID .  (84)

	.  reduce 84


state 89
	implement_for_declaration : IMPL FOR reference_type . ':' implement_for_body  (42)
	implement_for_declaration : IMPL FOR reference_type . ':' error ','  (43)

	':'  shift 136
	.  error


state 90
	print_statement : PRINT CADENA ',' .  (136)

	.  reduce 136


state 91
	method_invocation : ID '(' ')' . ','  (80)

	','  shift 137
	.  error


state 92
	real_parameter : arithmetic_operation .  (32)

	.  reduce 32


state 93
	method_invocation : ID '(' real_parameter . ')' ','  (79)

	')'  shift 138
	.  error


state 94
	arithmetic_operation : additive_expression .  (61)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 130
	'-'  shift 131
	','  reduce 61
	';'  reduce 61
	')'  reduce 61


state 95
	block : '{' RETURN ',' . '}'  (93)

	'}'  shift 139
	.  error


state 96
	variable_declarator_id : ID .  (22)

	.  reduce 22


state 97
	variable_declarators : variable_declarators . ';' variable_declarator  (19)
	local_variable_declaration : type variable_declarators .  (110)

	';'  shift 140
	','  reduce 110


state 98
	variable_declarators : variable_declarator .  (18)

	.  reduce 18


state 99
	variable_declarator : variable_declarator_id .  (20)
	variable_declarator : variable_declarator_id . '=' variable_initializer  (21)

	'='  shift 141
	','  reduce 20
	';'  reduce 20


state 100
	block : '{' block_statements RETURN . ',' '}'  (91)

	','  shift 142
	.  error


state 101
	block : '{' block_statements '}' .  (92)

	.  reduce 92


state 102
	block_statements : block_statements block_statement .  (98)

	.  reduce 98


state 103
	local_variable_declaration_statement : local_variable_declaration ',' .  (109)

	.  reduce 109


state 104
	method_declarator : ID '(' . formal_parameter ')'  (27)
	method_declarator : ID '(' . ')'  (28)

	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 88
	')'  shift 143
	.  error

	type  goto 144
	formal_parameter  goto 145
	reference_type  goto 49
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53


state 105
	assignment : left_hand_side assignment_operator expression .  (50)

	.  reduce 50


state 106
	type_name : ID .  (90)

	.  reduce 90


state 107
	interfaces : IMPLEMENT interface_type_list .  (33)
	interface_type_list : interface_type_list . ';' type_name  (35)

	';'  shift 146
	'{'  reduce 33


state 108
	interface_type_list : type_name .  (34)

	.  reduce 34


state 109
	field_declaration : error . ','  (17)

	','  shift 147
	.  error


state 110
	class_body : '{' class_body_declarations . '}'  (10)
	class_body_declarations : class_body_declarations . class_body_declaration  (12)

	error  shift 109
	VOID  shift 7
	LONG  shift 42
	UINT  shift 43
	DOUBLE  shift 44
	ID  shift 88
	'}'  shift 148
	.  error

	class_body_declaration  goto 149
	class_member_declaration  goto 112
	field_declaration  goto 113
	method_declaration  goto 114
	type  goto 115
	method_header  goto 19
	result_type  goto 20
	reference_type  goto 49
	primitive_type  goto 50
	numeric_type  goto 51
	integral_type  goto 52
	floating_type  goto 53


state 111
	class_body_declarations : class_body_declaration .  (11)

	.  reduce 11


state 112
	class_body_declaration : class_member_declaration .  (13)

	.  reduce 13


state 113
	class_member_declaration : field_declaration .  (14)

	.  reduce 14


state 114
	class_member_declaration : method_declaration .  (15)

	.  reduce 15


state 115
	field_declaration : type . variable_declarators ','  (16)

	ID  shift 96
	.  error

	variable_declarators  goto 150
	variable_declarator  goto 98
	variable_declarator_id  goto 99


state 116
	class_declaration : CLASS ID interfaces class_body .  (9)

	.  reduce 9


state 117
	interface_body : '{' '}' . ','  (38)

	','  shift 151
	.  error


state 118
	interface_method_declaration : result_type . method_declarator  (41)

	ID  shift 62
	.  error

	method_declarator  goto 152


state 119
	interface_body : '{' interface_member_declaration . '}'  (37)
	interface_member_declaration : interface_member_declaration . interface_method_declaration  (40)

	VOID  shift 7
	'}'  shift 153
	.  error

	result_type  goto 118
	interface_method_declaration  goto 154


state 120
	interface_member_declaration : interface_method_declaration .  (39)

	.  reduce 39


state 121
	multiplicative_expression : TOD '(' . unary_expression ')'  (66)

	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	unary_expression  goto 155
	term  goto 85
	factor  goto 86


state 122
	term : '(' expression . ')'  (73)

	')'  shift 156
	.  error


state 123
	if_then_statement : IF '(' expression ')' . executable_block END_IF ','  (124)
	if_then_statement : IF '(' expression ')' . executable_statament END_IF ','  (125)
	if_then_else_statement : IF '(' expression ')' . executable_block ELSE executable_block END_IF ','  (126)
	if_then_else_statement : IF '(' expression ')' . executable_block ELSE executable_statament END_IF ','  (127)
	if_then_else_statement : IF '(' expression ')' . executable_statament ELSE executable_statament END_IF ','  (128)
	if_then_else_statement : IF '(' expression ')' . executable_statament ELSE executable_block END_IF ','  (129)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 157
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 158
	executable_statament  goto 159
	if_then_statement  goto 160
	if_then_else_statement  goto 161
	for_in_range_statement  goto 162
	print_statement  goto 163
	expression_statement  goto 164
	empty_statement  goto 165
	statement_expression  goto 32


state 124
	equality_expression : equality_expression EQUAL_OPERATOR . relational_expression  (54)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	relational_expression  goto 166
	additive_expression  goto 82
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 125
	equality_expression : equality_expression NOT_EQUAL_OPERATOR . relational_expression  (55)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	relational_expression  goto 167
	additive_expression  goto 82
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 126
	relational_expression : relational_expression GREATER_THAN_OR_EQUAL_OPERATOR . additive_expression  (59)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	additive_expression  goto 168
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 127
	relational_expression : relational_expression LESS_THAN_OR_EQUAL_OPERATOR . additive_expression  (60)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	additive_expression  goto 169
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 128
	relational_expression : relational_expression '<' . additive_expression  (57)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	additive_expression  goto 170
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 129
	relational_expression : relational_expression '>' . additive_expression  (58)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	additive_expression  goto 171
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 130
	additive_expression : additive_expression '+' . multiplicative_expression  (63)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	multiplicative_expression  goto 172
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 131
	additive_expression : additive_expression '-' . multiplicative_expression  (64)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	multiplicative_expression  goto 173
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 132
	multiplicative_expression : multiplicative_expression '*' . unary_expression  (67)

	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	unary_expression  goto 174
	term  goto 85
	factor  goto 86


state 133
	multiplicative_expression : multiplicative_expression '/' . unary_expression  (68)

	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	unary_expression  goto 175
	term  goto 85
	factor  goto 86


state 134
	multiplicative_expression : multiplicative_expression '%' . unary_expression  (69)

	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	unary_expression  goto 176
	term  goto 85
	factor  goto 86


state 135
	for_in_range_statement : FOR for_variable IN RANGE . '(' for_init for_end for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN RANGE . '(' for_init for_end for_update ')' executable_statament ','  (131)

	'('  shift 177
	.  error


state 136
	implement_for_declaration : IMPL FOR reference_type ':' . implement_for_body  (42)
	implement_for_declaration : IMPL FOR reference_type ':' . error ','  (43)

	error  shift 178
	'{'  shift 179
	.  error

	implement_for_body  goto 180


state 137
	method_invocation : ID '(' ')' ',' .  (80)

	.  reduce 80


state 138
	method_invocation : ID '(' real_parameter ')' . ','  (79)

	','  shift 181
	.  error


state 139
	block : '{' RETURN ',' '}' .  (93)

	.  reduce 93


state 140
	variable_declarators : variable_declarators ';' . variable_declarator  (19)

	ID  shift 96
	.  error

	variable_declarator  goto 182
	variable_declarator_id  goto 99


state 141
	variable_declarator : variable_declarator_id '=' . variable_initializer  (21)

	TOD  shift 73
	ID  shift 74
	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	'('  shift 78
	.  error

	variable_initializer  goto 183
	arithmetic_operation  goto 184
	additive_expression  goto 94
	multiplicative_expression  goto 83
	unary_expression  goto 84
	term  goto 85
	factor  goto 86


state 142
	block : '{' block_statements RETURN ',' . '}'  (91)

	'}'  shift 185
	.  error


state 143
	method_declarator : ID '(' ')' .  (28)

	.  reduce 28


state 144
	formal_parameter : type . variable_declarator_id  (31)

	ID  shift 96
	.  error

	variable_declarator_id  goto 186


state 145
	method_declarator : ID '(' formal_parameter . ')'  (27)

	')'  shift 187
	.  error


state 146
	interface_type_list : interface_type_list ';' . type_name  (35)

	ID  shift 106
	.  error

	type_name  goto 188


state 147
	field_declaration : error ',' .  (17)

	.  reduce 17


state 148
	class_body : '{' class_body_declarations '}' .  (10)

	.  reduce 10


state 149
	class_body_declarations : class_body_declarations class_body_declaration .  (12)

	.  reduce 12


state 150
	field_declaration : type variable_declarators . ','  (16)
	variable_declarators : variable_declarators . ';' variable_declarator  (19)

	','  shift 189
	';'  shift 140
	.  error


state 151
	interface_body : '{' '}' ',' .  (38)

	.  reduce 38


state 152
	interface_method_declaration : result_type method_declarator .  (41)

	.  reduce 41


state 153
	interface_body : '{' interface_member_declaration '}' .  (37)

	.  reduce 37


state 154
	interface_member_declaration : interface_member_declaration interface_method_declaration .  (40)

	.  reduce 40


state 155
	multiplicative_expression : TOD '(' unary_expression . ')'  (66)

	')'  shift 190
	.  error


state 156
	term : '(' expression ')' .  (73)

	.  reduce 73


state 157
	executable_block : '{' . executable_block_statements '}'  (95)
	executable_block : '{' . '}'  (96)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'}'  shift 191
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block_statements  goto 192
	executable_statament  goto 193
	if_then_statement  goto 160
	if_then_else_statement  goto 161
	for_in_range_statement  goto 162
	print_statement  goto 163
	expression_statement  goto 164
	empty_statement  goto 165
	statement_expression  goto 32


state 158
	if_then_statement : IF '(' expression ')' executable_block . END_IF ','  (124)
	if_then_else_statement : IF '(' expression ')' executable_block . ELSE executable_block END_IF ','  (126)
	if_then_else_statement : IF '(' expression ')' executable_block . ELSE executable_statament END_IF ','  (127)

	ELSE  shift 194
	END_IF  shift 195
	.  error


state 159
	if_then_statement : IF '(' expression ')' executable_statament . END_IF ','  (125)
	if_then_else_statement : IF '(' expression ')' executable_statament . ELSE executable_statament END_IF ','  (128)
	if_then_else_statement : IF '(' expression ')' executable_statament . ELSE executable_block END_IF ','  (129)

	ELSE  shift 196
	END_IF  shift 197
	.  error


state 160
	executable_statament : if_then_statement .  (103)

	.  reduce 103


state 161
	executable_statament : if_then_else_statement .  (104)

	.  reduce 104


state 162
	executable_statament : for_in_range_statement .  (105)

	.  reduce 105


state 163
	executable_statament : print_statement .  (106)

	.  reduce 106


state 164
	executable_statament : expression_statement .  (107)

	.  reduce 107


state 165
	executable_statament : empty_statement .  (108)

	.  reduce 108


state 166
	equality_expression : equality_expression EQUAL_OPERATOR relational_expression .  (54)
	relational_expression : relational_expression . '<' additive_expression  (57)
	relational_expression : relational_expression . '>' additive_expression  (58)
	relational_expression : relational_expression . GREATER_THAN_OR_EQUAL_OPERATOR additive_expression  (59)
	relational_expression : relational_expression . LESS_THAN_OR_EQUAL_OPERATOR additive_expression  (60)

	GREATER_THAN_OR_EQUAL_OPERATOR  shift 126
	LESS_THAN_OR_EQUAL_OPERATOR  shift 127
	'<'  shift 128
	'>'  shift 129
	$end  reduce 54
	CLASS  reduce 54
	INTERFACE  reduce 54
	RETURN  reduce 54
	IF  reduce 54
	ELSE  reduce 54
	END_IF  reduce 54
	FOR  reduce 54
	IMPL  reduce 54
	PRINT  reduce 54
	EQUAL_OPERATOR  reduce 54
	NOT_EQUAL_OPERATOR  reduce 54
	VOID  reduce 54
	LONG  reduce 54
	UINT  reduce 54
	DOUBLE  reduce 54
	ID  reduce 54
	'{'  reduce 54
	'}'  reduce 54
	','  reduce 54
	')'  reduce 54


state 167
	equality_expression : equality_expression NOT_EQUAL_OPERATOR relational_expression .  (55)
	relational_expression : relational_expression . '<' additive_expression  (57)
	relational_expression : relational_expression . '>' additive_expression  (58)
	relational_expression : relational_expression . GREATER_THAN_OR_EQUAL_OPERATOR additive_expression  (59)
	relational_expression : relational_expression . LESS_THAN_OR_EQUAL_OPERATOR additive_expression  (60)

	GREATER_THAN_OR_EQUAL_OPERATOR  shift 126
	LESS_THAN_OR_EQUAL_OPERATOR  shift 127
	'<'  shift 128
	'>'  shift 129
	$end  reduce 55
	CLASS  reduce 55
	INTERFACE  reduce 55
	RETURN  reduce 55
	IF  reduce 55
	ELSE  reduce 55
	END_IF  reduce 55
	FOR  reduce 55
	IMPL  reduce 55
	PRINT  reduce 55
	EQUAL_OPERATOR  reduce 55
	NOT_EQUAL_OPERATOR  reduce 55
	VOID  reduce 55
	LONG  reduce 55
	UINT  reduce 55
	DOUBLE  reduce 55
	ID  reduce 55
	'{'  reduce 55
	'}'  reduce 55
	','  reduce 55
	')'  reduce 55


state 168
	relational_expression : relational_expression GREATER_THAN_OR_EQUAL_OPERATOR additive_expression .  (59)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 130
	'-'  shift 131
	$end  reduce 59
	CLASS  reduce 59
	INTERFACE  reduce 59
	RETURN  reduce 59
	IF  reduce 59
	ELSE  reduce 59
	END_IF  reduce 59
	FOR  reduce 59
	IMPL  reduce 59
	PRINT  reduce 59
	EQUAL_OPERATOR  reduce 59
	NOT_EQUAL_OPERATOR  reduce 59
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 59
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 59
	VOID  reduce 59
	LONG  reduce 59
	UINT  reduce 59
	DOUBLE  reduce 59
	ID  reduce 59
	'{'  reduce 59
	'}'  reduce 59
	','  reduce 59
	')'  reduce 59
	'<'  reduce 59
	'>'  reduce 59


state 169
	relational_expression : relational_expression LESS_THAN_OR_EQUAL_OPERATOR additive_expression .  (60)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 130
	'-'  shift 131
	$end  reduce 60
	CLASS  reduce 60
	INTERFACE  reduce 60
	RETURN  reduce 60
	IF  reduce 60
	ELSE  reduce 60
	END_IF  reduce 60
	FOR  reduce 60
	IMPL  reduce 60
	PRINT  reduce 60
	EQUAL_OPERATOR  reduce 60
	NOT_EQUAL_OPERATOR  reduce 60
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 60
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 60
	VOID  reduce 60
	LONG  reduce 60
	UINT  reduce 60
	DOUBLE  reduce 60
	ID  reduce 60
	'{'  reduce 60
	'}'  reduce 60
	','  reduce 60
	')'  reduce 60
	'<'  reduce 60
	'>'  reduce 60


state 170
	relational_expression : relational_expression '<' additive_expression .  (57)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 130
	'-'  shift 131
	$end  reduce 57
	CLASS  reduce 57
	INTERFACE  reduce 57
	RETURN  reduce 57
	IF  reduce 57
	ELSE  reduce 57
	END_IF  reduce 57
	FOR  reduce 57
	IMPL  reduce 57
	PRINT  reduce 57
	EQUAL_OPERATOR  reduce 57
	NOT_EQUAL_OPERATOR  reduce 57
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 57
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 57
	VOID  reduce 57
	LONG  reduce 57
	UINT  reduce 57
	DOUBLE  reduce 57
	ID  reduce 57
	'{'  reduce 57
	'}'  reduce 57
	','  reduce 57
	')'  reduce 57
	'<'  reduce 57
	'>'  reduce 57


state 171
	relational_expression : relational_expression '>' additive_expression .  (58)
	additive_expression : additive_expression . '+' multiplicative_expression  (63)
	additive_expression : additive_expression . '-' multiplicative_expression  (64)

	'+'  shift 130
	'-'  shift 131
	$end  reduce 58
	CLASS  reduce 58
	INTERFACE  reduce 58
	RETURN  reduce 58
	IF  reduce 58
	ELSE  reduce 58
	END_IF  reduce 58
	FOR  reduce 58
	IMPL  reduce 58
	PRINT  reduce 58
	EQUAL_OPERATOR  reduce 58
	NOT_EQUAL_OPERATOR  reduce 58
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 58
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 58
	VOID  reduce 58
	LONG  reduce 58
	UINT  reduce 58
	DOUBLE  reduce 58
	ID  reduce 58
	'{'  reduce 58
	'}'  reduce 58
	','  reduce 58
	')'  reduce 58
	'<'  reduce 58
	'>'  reduce 58


state 172
	additive_expression : additive_expression '+' multiplicative_expression .  (63)
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (67)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (68)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (69)

	'*'  shift 132
	'/'  shift 133
	'%'  shift 134
	$end  reduce 63
	CLASS  reduce 63
	INTERFACE  reduce 63
	RETURN  reduce 63
	IF  reduce 63
	ELSE  reduce 63
	END_IF  reduce 63
	FOR  reduce 63
	IMPL  reduce 63
	PRINT  reduce 63
	EQUAL_OPERATOR  reduce 63
	NOT_EQUAL_OPERATOR  reduce 63
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 63
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 63
	VOID  reduce 63
	LONG  reduce 63
	UINT  reduce 63
	DOUBLE  reduce 63
	ID  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'{'  reduce 63
	'}'  reduce 63
	','  reduce 63
	';'  reduce 63
	')'  reduce 63
	'<'  reduce 63
	'>'  reduce 63


state 173
	additive_expression : additive_expression '-' multiplicative_expression .  (64)
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (67)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (68)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (69)

	'*'  shift 132
	'/'  shift 133
	'%'  shift 134
	$end  reduce 64
	CLASS  reduce 64
	INTERFACE  reduce 64
	RETURN  reduce 64
	IF  reduce 64
	ELSE  reduce 64
	END_IF  reduce 64
	FOR  reduce 64
	IMPL  reduce 64
	PRINT  reduce 64
	EQUAL_OPERATOR  reduce 64
	NOT_EQUAL_OPERATOR  reduce 64
	GREATER_THAN_OR_EQUAL_OPERATOR  reduce 64
	LESS_THAN_OR_EQUAL_OPERATOR  reduce 64
	VOID  reduce 64
	LONG  reduce 64
	UINT  reduce 64
	DOUBLE  reduce 64
	ID  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	'{'  reduce 64
	'}'  reduce 64
	','  reduce 64
	';'  reduce 64
	')'  reduce 64
	'<'  reduce 64
	'>'  reduce 64


state 174
	multiplicative_expression : multiplicative_expression '*' unary_expression .  (67)

	.  reduce 67


state 175
	multiplicative_expression : multiplicative_expression '/' unary_expression .  (68)

	.  reduce 68


state 176
	multiplicative_expression : multiplicative_expression '%' unary_expression .  (69)

	.  reduce 69


state 177
	for_in_range_statement : FOR for_variable IN RANGE '(' . for_init for_end for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN RANGE '(' . for_init for_end for_update ')' executable_statament ','  (131)

	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	.  error

	factor  goto 198
	for_init  goto 199


state 178
	implement_for_declaration : IMPL FOR reference_type ':' error . ','  (43)

	','  shift 200
	.  error


state 179
	implement_for_body : '{' . implement_for_body_declarations '}'  (44)

	VOID  shift 7
	.  error

	method_header  goto 201
	result_type  goto 20
	implement_for_body_declarations  goto 202
	implement_for_body_declaration  goto 203
	implement_for_method_declaration  goto 204


state 180
	implement_for_declaration : IMPL FOR reference_type ':' implement_for_body .  (42)

	.  reduce 42


state 181
	method_invocation : ID '(' real_parameter ')' ',' .  (79)

	.  reduce 79


state 182
	variable_declarators : variable_declarators ';' variable_declarator .  (19)

	.  reduce 19


state 183
	variable_declarator : variable_declarator_id '=' variable_initializer .  (21)

	.  reduce 21


state 184
	variable_initializer : arithmetic_operation .  (23)

	.  reduce 23


state 185
	block : '{' block_statements RETURN ',' '}' .  (91)

	.  reduce 91


state 186
	formal_parameter : type variable_declarator_id .  (31)

	.  reduce 31


state 187
	method_declarator : ID '(' formal_parameter ')' .  (27)

	.  reduce 27


state 188
	interface_type_list : interface_type_list ';' type_name .  (35)

	.  reduce 35


state 189
	field_declaration : type variable_declarators ',' .  (16)

	.  reduce 16


state 190
	multiplicative_expression : TOD '(' unary_expression ')' .  (66)

	.  reduce 66


state 191
	executable_block : '{' '}' .  (96)

	.  reduce 96


state 192
	executable_block : '{' executable_block_statements . '}'  (95)
	executable_block_statements : executable_block_statements . executable_statament  (100)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'}'  shift 205
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_statament  goto 206
	if_then_statement  goto 160
	if_then_else_statement  goto 161
	for_in_range_statement  goto 162
	print_statement  goto 163
	expression_statement  goto 164
	empty_statement  goto 165
	statement_expression  goto 32


state 193
	executable_block_statements : executable_statament .  (99)

	.  reduce 99


state 194
	if_then_else_statement : IF '(' expression ')' executable_block ELSE . executable_block END_IF ','  (126)
	if_then_else_statement : IF '(' expression ')' executable_block ELSE . executable_statament END_IF ','  (127)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 157
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 207
	executable_statament  goto 208
	if_then_statement  goto 160
	if_then_else_statement  goto 161
	for_in_range_statement  goto 162
	print_statement  goto 163
	expression_statement  goto 164
	empty_statement  goto 165
	statement_expression  goto 32


state 195
	if_then_statement : IF '(' expression ')' executable_block END_IF . ','  (124)

	','  shift 209
	.  error


state 196
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE . executable_statament END_IF ','  (128)
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE . executable_block END_IF ','  (129)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 157
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 210
	executable_statament  goto 211
	if_then_statement  goto 160
	if_then_else_statement  goto 161
	for_in_range_statement  goto 162
	print_statement  goto 163
	expression_statement  goto 164
	empty_statement  goto 165
	statement_expression  goto 32


state 197
	if_then_statement : IF '(' expression ')' executable_statament END_IF . ','  (125)

	','  shift 212
	.  error


state 198
	for_init : factor .  (133)

	.  reduce 133


state 199
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init . for_end for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init . for_end for_update ')' executable_statament ','  (131)

	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	.  error

	factor  goto 213
	for_end  goto 214


state 200
	implement_for_declaration : IMPL FOR reference_type ':' error ',' .  (43)

	.  reduce 43


state 201
	implement_for_method_declaration : method_header . implement_for_method_body  (48)

	'{'  shift 9
	','  shift 59
	.  error

	method_body  goto 215
	block  goto 61
	implement_for_method_body  goto 216


state 202
	implement_for_body : '{' implement_for_body_declarations . '}'  (44)
	implement_for_body_declarations : implement_for_body_declarations . implement_for_body_declaration  (46)

	VOID  shift 7
	'}'  shift 217
	.  error

	method_header  goto 201
	result_type  goto 20
	implement_for_body_declaration  goto 218
	implement_for_method_declaration  goto 204


state 203
	implement_for_body_declarations : implement_for_body_declaration .  (45)

	.  reduce 45


state 204
	implement_for_body_declaration : implement_for_method_declaration .  (47)

	.  reduce 47


state 205
	executable_block : '{' executable_block_statements '}' .  (95)

	.  reduce 95


state 206
	executable_block_statements : executable_block_statements executable_statament .  (100)

	.  reduce 100


state 207
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block . END_IF ','  (126)

	END_IF  shift 219
	.  error


state 208
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_statament . END_IF ','  (127)

	END_IF  shift 220
	.  error


state 209
	if_then_statement : IF '(' expression ')' executable_block END_IF ',' .  (124)

	.  reduce 124


state 210
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block . END_IF ','  (129)

	END_IF  shift 221
	.  error


state 211
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_statament . END_IF ','  (128)

	END_IF  shift 222
	.  error


state 212
	if_then_statement : IF '(' expression ')' executable_statament END_IF ',' .  (125)

	.  reduce 125


state 213
	for_end : factor .  (135)

	.  reduce 135


state 214
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end . for_update ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end . for_update ')' executable_statament ','  (131)

	CTE_DOUBLE  shift 75
	CTE_UINT  shift 76
	CTE_LONG  shift 77
	.  error

	factor  goto 223
	for_update  goto 224


state 215
	implement_for_method_body : method_body .  (49)

	.  reduce 49


state 216
	implement_for_method_declaration : method_header implement_for_method_body .  (48)

	.  reduce 48


state 217
	implement_for_body : '{' implement_for_body_declarations '}' .  (44)

	.  reduce 44


state 218
	implement_for_body_declarations : implement_for_body_declarations implement_for_body_declaration .  (46)

	.  reduce 46


state 219
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block END_IF . ','  (126)

	','  shift 225
	.  error


state 220
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_statament END_IF . ','  (127)

	','  shift 226
	.  error


state 221
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block END_IF . ','  (129)

	','  shift 227
	.  error


state 222
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_statament END_IF . ','  (128)

	','  shift 228
	.  error


state 223
	for_update : factor .  (134)

	.  reduce 134


state 224
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update . ')' executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update . ')' executable_statament ','  (131)

	')'  shift 229
	.  error


state 225
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_block END_IF ',' .  (126)

	.  reduce 126


state 226
	if_then_else_statement : IF '(' expression ')' executable_block ELSE executable_statament END_IF ',' .  (127)

	.  reduce 127


state 227
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_block END_IF ',' .  (129)

	.  reduce 129


state 228
	if_then_else_statement : IF '(' expression ')' executable_statament ELSE executable_statament END_IF ',' .  (128)

	.  reduce 128


state 229
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' . executable_block ','  (130)
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' . executable_statament ','  (131)

	IF  shift 3
	FOR  shift 4
	PRINT  shift 6
	ID  shift 8
	'{'  shift 157
	','  shift 10
	.  error

	assignment  goto 22
	left_hand_side  goto 23
	method_invocation  goto 24
	executable_block  goto 230
	executable_statament  goto 231
	if_then_statement  goto 160
	if_then_else_statement  goto 161
	for_in_range_statement  goto 162
	print_statement  goto 163
	expression_statement  goto 164
	empty_statement  goto 165
	statement_expression  goto 32


state 230
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_block . ','  (130)

	','  shift 232
	.  error


state 231
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament . ','  (131)

	','  shift 233
	.  error


state 232
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_block ',' .  (130)

	.  reduce 130


state 233
	for_in_range_statement : FOR for_variable IN RANGE '(' for_init for_end for_update ')' executable_statament ',' .  (131)

	.  reduce 131


44 terminals, 74 nonterminals
138 grammar rules, 234 states
